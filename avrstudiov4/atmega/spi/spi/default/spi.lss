
spi.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000042  00800100  000007a0  00000834  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007a0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800142  00800142  00000876  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000876  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008d4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  00000914  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000b26  00000000  00000000  0000093c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000813  00000000  00000000  00001462  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000264  00000000  00000000  00001c75  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000a0  00000000  00000000  00001edc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000040d  00000000  00000000  00001f7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001c7  00000000  00000000  00002389  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  00002550  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e0 ea       	ldi	r30, 0xA0	; 160
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a2 34       	cpi	r26, 0x42	; 66
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a2 e4       	ldi	r26, 0x42	; 66
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a8 34       	cpi	r26, 0x48	; 72
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 ad 00 	call	0x15a	; 0x15a <main>
  9e:	0c 94 ce 03 	jmp	0x79c	; 0x79c <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <uart_putchar>:

static FILE mystdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);

static int uart_putchar(char c, FILE *stream)
{
	loop_until_bit_is_set(UCSR0A, UDRE0);
  a6:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
  aa:	95 ff       	sbrs	r25, 5
  ac:	fc cf       	rjmp	.-8      	; 0xa6 <uart_putchar>
	UDR0 = c;
  ae:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
  b2:	80 e0       	ldi	r24, 0x00	; 0
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	08 95       	ret

000000b8 <startserial>:

void startserial(void)
{
    UBRR0H = UBRRH_VALUE;
  b8:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
    UBRR0L = UBRRL_VALUE;
  bc:	83 e3       	ldi	r24, 0x33	; 51
  be:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
#if USE_2X
    UCSR0A |= _BV(U2X0);
#else
    UCSR0A &= ~(_BV(U2X0));
  c2:	e0 ec       	ldi	r30, 0xC0	; 192
  c4:	f0 e0       	ldi	r31, 0x00	; 0
  c6:	80 81       	ld	r24, Z
  c8:	8d 7f       	andi	r24, 0xFD	; 253
  ca:	80 83       	st	Z, r24
#endif
    UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
  cc:	86 e0       	ldi	r24, 0x06	; 6
  ce:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
    UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */
  d2:	88 e1       	ldi	r24, 0x18	; 24
  d4:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	stdout = &mystdout;
  d8:	80 e0       	ldi	r24, 0x00	; 0
  da:	91 e0       	ldi	r25, 0x01	; 1
  dc:	90 93 45 01 	sts	0x0145, r25	; 0x800145 <__data_end+0x3>
  e0:	80 93 44 01 	sts	0x0144, r24	; 0x800144 <__data_end+0x2>
	printf("Hello eclipse World!\n\r");
  e4:	83 e1       	ldi	r24, 0x13	; 19
  e6:	91 e0       	ldi	r25, 0x01	; 1
  e8:	9f 93       	push	r25
  ea:	8f 93       	push	r24
  ec:	0e 94 03 01 	call	0x206	; 0x206 <printf>
  f0:	0f 90       	pop	r0
  f2:	0f 90       	pop	r0
  f4:	08 95       	ret

000000f6 <startspi>:
}

void startspi(void)
{
	DDRB = _BV(PORTB3)|_BV(PORTB5)|_BV(PORTB2);
  f6:	8c e2       	ldi	r24, 0x2C	; 44
  f8:	84 b9       	out	0x04, r24	; 4
	SPCR = _BV(SPE)|_BV(MSTR);
  fa:	80 e5       	ldi	r24, 0x50	; 80
  fc:	8c bd       	out	0x2c, r24	; 44
	SPSR |= _BV(SPI2X);
  fe:	8d b5       	in	r24, 0x2d	; 45
 100:	81 60       	ori	r24, 0x01	; 1
 102:	8d bd       	out	0x2d, r24	; 45
 104:	08 95       	ret

00000106 <spi_transfer>:
}

char spi_transfer(char c)
{
	PORTB &= ~(_BV(PORTB2));//clear
 106:	2a 98       	cbi	0x05, 2	; 5
	SPDR = c;
 108:	8e bd       	out	0x2e, r24	; 46
	loop_until_bit_is_set(SPSR, SPIF);
 10a:	0d b4       	in	r0, 0x2d	; 45
 10c:	07 fe       	sbrs	r0, 7
 10e:	fd cf       	rjmp	.-6      	; 0x10a <spi_transfer+0x4>
	PORTB |= _BV(PORTB2);//set
 110:	2a 9a       	sbi	0x05, 2	; 5
	return(SPDR);
 112:	8e b5       	in	r24, 0x2e	; 46
}
 114:	08 95       	ret

00000116 <SPI_Read_Bytes>:

void SPI_Read_Bytes(char *buffer, unsigned NoBytes)
{
	PORTB &= ~(_BV(PORTB2));//clear
 116:	2a 98       	cbi	0x05, 2	; 5
 118:	68 0f       	add	r22, r24
 11a:	79 1f       	adc	r23, r25
	for (int i = 0; i < NoBytes; i++)
	{
		SPDR = 0xFF;
 11c:	2f ef       	ldi	r18, 0xFF	; 255
}

void SPI_Read_Bytes(char *buffer, unsigned NoBytes)
{
	PORTB &= ~(_BV(PORTB2));//clear
	for (int i = 0; i < NoBytes; i++)
 11e:	86 17       	cp	r24, r22
 120:	97 07       	cpc	r25, r23
 122:	49 f0       	breq	.+18     	; 0x136 <SPI_Read_Bytes+0x20>
	{
		SPDR = 0xFF;
 124:	2e bd       	out	0x2e, r18	; 46
		loop_until_bit_is_set(SPSR, SPIF);
 126:	0d b4       	in	r0, 0x2d	; 45
 128:	07 fe       	sbrs	r0, 7
 12a:	fd cf       	rjmp	.-6      	; 0x126 <SPI_Read_Bytes+0x10>
		buffer[i] = SPDR;
 12c:	3e b5       	in	r19, 0x2e	; 46
 12e:	fc 01       	movw	r30, r24
 130:	31 93       	st	Z+, r19
 132:	cf 01       	movw	r24, r30
 134:	f4 cf       	rjmp	.-24     	; 0x11e <SPI_Read_Bytes+0x8>
	}
	PORTB |= _BV(PORTB2);//set
 136:	2a 9a       	sbi	0x05, 2	; 5
 138:	08 95       	ret

0000013a <SPI_Write_Bytes>:
}

void SPI_Write_Bytes(char *buffer, unsigned NoBytes)
{
	PORTB &= ~(_BV(PORTB2));//clear
 13a:	2a 98       	cbi	0x05, 2	; 5
 13c:	68 0f       	add	r22, r24
 13e:	79 1f       	adc	r23, r25
	for (int i = 0; i < NoBytes; i++)
 140:	86 17       	cp	r24, r22
 142:	97 07       	cpc	r25, r23
 144:	41 f0       	breq	.+16     	; 0x156 <SPI_Write_Bytes+0x1c>
	{
		SPDR = buffer[i];
 146:	fc 01       	movw	r30, r24
 148:	21 91       	ld	r18, Z+
 14a:	cf 01       	movw	r24, r30
 14c:	2e bd       	out	0x2e, r18	; 46
		loop_until_bit_is_set(SPSR, SPIF);
 14e:	0d b4       	in	r0, 0x2d	; 45
 150:	07 fe       	sbrs	r0, 7
 152:	fd cf       	rjmp	.-6      	; 0x14e <SPI_Write_Bytes+0x14>
 154:	f5 cf       	rjmp	.-22     	; 0x140 <SPI_Write_Bytes+0x6>
	}
	PORTB |= _BV(PORTB2);//set
 156:	2a 9a       	sbi	0x05, 2	; 5
 158:	08 95       	ret

0000015a <main>:
}

int main(void)
{
 15a:	cf 93       	push	r28
 15c:	df 93       	push	r29
 15e:	00 d0       	rcall	.+0      	; 0x160 <main+0x6>
 160:	cd b7       	in	r28, 0x3d	; 61
 162:	de b7       	in	r29, 0x3e	; 62
	uint16_t result;
	startserial();
 164:	0e 94 5c 00 	call	0xb8	; 0xb8 <startserial>
	startspi();
 168:	0e 94 7b 00 	call	0xf6	; 0xf6 <startspi>
	SPI_Write_Bytes("\xFF\xFF\xFF\xFF\xFF", 5);
 16c:	65 e0       	ldi	r22, 0x05	; 5
 16e:	70 e0       	ldi	r23, 0x00	; 0
 170:	8a e2       	ldi	r24, 0x2A	; 42
 172:	91 e0       	ldi	r25, 0x01	; 1
 174:	0e 94 9d 00 	call	0x13a	; 0x13a <SPI_Write_Bytes>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 178:	8f e1       	ldi	r24, 0x1F	; 31
 17a:	9e e4       	ldi	r25, 0x4E	; 78
 17c:	01 97       	sbiw	r24, 0x01	; 1
 17e:	f1 f7       	brne	.-4      	; 0x17c <main+0x22>
 180:	00 c0       	rjmp	.+0      	; 0x182 <main+0x28>
 182:	00 00       	nop
	_delay_ms(10);
	SPI_Write_Bytes("\x20\x0C\x10\x04", 4);
 184:	64 e0       	ldi	r22, 0x04	; 4
 186:	70 e0       	ldi	r23, 0x00	; 0
 188:	80 e3       	ldi	r24, 0x30	; 48
 18a:	91 e0       	ldi	r25, 0x01	; 1
 18c:	0e 94 9d 00 	call	0x13a	; 0x13a <SPI_Write_Bytes>
 190:	8f e1       	ldi	r24, 0x1F	; 31
 192:	9e e4       	ldi	r25, 0x4E	; 78
 194:	01 97       	sbiw	r24, 0x01	; 1
 196:	f1 f7       	brne	.-4      	; 0x194 <main+0x3a>
 198:	00 c0       	rjmp	.+0      	; 0x19a <main+0x40>
 19a:	00 00       	nop
	_delay_ms(10);
	SPI_Write_Bytes("\x60\x18\x3A\x00", 4);
 19c:	64 e0       	ldi	r22, 0x04	; 4
 19e:	70 e0       	ldi	r23, 0x00	; 0
 1a0:	8e e0       	ldi	r24, 0x0E	; 14
 1a2:	91 e0       	ldi	r25, 0x01	; 1
 1a4:	0e 94 9d 00 	call	0x13a	; 0x13a <SPI_Write_Bytes>
 1a8:	8f e1       	ldi	r24, 0x1F	; 31
 1aa:	9e e4       	ldi	r25, 0x4E	; 78
 1ac:	01 97       	sbiw	r24, 0x01	; 1
 1ae:	f1 f7       	brne	.-4      	; 0x1ac <main+0x52>
 1b0:	00 c0       	rjmp	.+0      	; 0x1b2 <main+0x58>
 1b2:	00 00       	nop
	_delay_ms(10);
	SPI_Write_Bytes("\x70\x89\x78\xD7", 4);
 1b4:	64 e0       	ldi	r22, 0x04	; 4
 1b6:	70 e0       	ldi	r23, 0x00	; 0
 1b8:	85 e3       	ldi	r24, 0x35	; 53
 1ba:	91 e0       	ldi	r25, 0x01	; 1
 1bc:	0e 94 9d 00 	call	0x13a	; 0x13a <SPI_Write_Bytes>
 1c0:	8f e1       	ldi	r24, 0x1F	; 31
 1c2:	9e e4       	ldi	r25, 0x4E	; 78
 1c4:	01 97       	sbiw	r24, 0x01	; 1
 1c6:	f1 f7       	brne	.-4      	; 0x1c4 <main+0x6a>
 1c8:	00 c0       	rjmp	.+0      	; 0x1ca <main+0x70>
 1ca:	00 00       	nop
    {
			if (bit_is_clear(PINB,PINB1))
			{
				spi_transfer(0x38);
				SPI_Read_Bytes((char *)&result,2);
				printf("%04X\r\n",__builtin_bswap16(result));
 1cc:	0a e3       	ldi	r16, 0x3A	; 58
 1ce:	11 e0       	ldi	r17, 0x01	; 1
	SPI_Write_Bytes("\x70\x89\x78\xD7", 4);
	_delay_ms(10);

    while(1)
    {
			if (bit_is_clear(PINB,PINB1))
 1d0:	19 99       	sbic	0x03, 1	; 3
 1d2:	fe cf       	rjmp	.-4      	; 0x1d0 <main+0x76>
			{
				spi_transfer(0x38);
 1d4:	88 e3       	ldi	r24, 0x38	; 56
 1d6:	0e 94 83 00 	call	0x106	; 0x106 <spi_transfer>
				SPI_Read_Bytes((char *)&result,2);
 1da:	62 e0       	ldi	r22, 0x02	; 2
 1dc:	70 e0       	ldi	r23, 0x00	; 0
 1de:	ce 01       	movw	r24, r28
 1e0:	01 96       	adiw	r24, 0x01	; 1
 1e2:	0e 94 8b 00 	call	0x116	; 0x116 <SPI_Read_Bytes>
				printf("%04X\r\n",__builtin_bswap16(result));
 1e6:	89 81       	ldd	r24, Y+1	; 0x01
 1e8:	9a 81       	ldd	r25, Y+2	; 0x02
 1ea:	98 27       	eor	r25, r24
 1ec:	89 27       	eor	r24, r25
 1ee:	98 27       	eor	r25, r24
 1f0:	9f 93       	push	r25
 1f2:	8f 93       	push	r24
 1f4:	1f 93       	push	r17
 1f6:	0f 93       	push	r16
 1f8:	0e 94 03 01 	call	0x206	; 0x206 <printf>
 1fc:	0f 90       	pop	r0
 1fe:	0f 90       	pop	r0
 200:	0f 90       	pop	r0
 202:	0f 90       	pop	r0
 204:	e5 cf       	rjmp	.-54     	; 0x1d0 <main+0x76>

00000206 <printf>:
 206:	a0 e0       	ldi	r26, 0x00	; 0
 208:	b0 e0       	ldi	r27, 0x00	; 0
 20a:	e9 e0       	ldi	r30, 0x09	; 9
 20c:	f1 e0       	ldi	r31, 0x01	; 1
 20e:	0c 94 a7 03 	jmp	0x74e	; 0x74e <__prologue_saves__+0x20>
 212:	ae 01       	movw	r20, r28
 214:	4b 5f       	subi	r20, 0xFB	; 251
 216:	5f 4f       	sbci	r21, 0xFF	; 255
 218:	fa 01       	movw	r30, r20
 21a:	61 91       	ld	r22, Z+
 21c:	71 91       	ld	r23, Z+
 21e:	af 01       	movw	r20, r30
 220:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <__data_end+0x2>
 224:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <__data_end+0x3>
 228:	0e 94 19 01 	call	0x232	; 0x232 <vfprintf>
 22c:	e2 e0       	ldi	r30, 0x02	; 2
 22e:	0c 94 c3 03 	jmp	0x786	; 0x786 <__epilogue_restores__+0x20>

00000232 <vfprintf>:
 232:	ac e0       	ldi	r26, 0x0C	; 12
 234:	b0 e0       	ldi	r27, 0x00	; 0
 236:	ef e1       	ldi	r30, 0x1F	; 31
 238:	f1 e0       	ldi	r31, 0x01	; 1
 23a:	0c 94 97 03 	jmp	0x72e	; 0x72e <__prologue_saves__>
 23e:	7c 01       	movw	r14, r24
 240:	6b 01       	movw	r12, r22
 242:	8a 01       	movw	r16, r20
 244:	fc 01       	movw	r30, r24
 246:	17 82       	std	Z+7, r1	; 0x07
 248:	16 82       	std	Z+6, r1	; 0x06
 24a:	83 81       	ldd	r24, Z+3	; 0x03
 24c:	81 ff       	sbrs	r24, 1
 24e:	bd c1       	rjmp	.+890    	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 250:	ce 01       	movw	r24, r28
 252:	01 96       	adiw	r24, 0x01	; 1
 254:	4c 01       	movw	r8, r24
 256:	f7 01       	movw	r30, r14
 258:	93 81       	ldd	r25, Z+3	; 0x03
 25a:	f6 01       	movw	r30, r12
 25c:	93 fd       	sbrc	r25, 3
 25e:	85 91       	lpm	r24, Z+
 260:	93 ff       	sbrs	r25, 3
 262:	81 91       	ld	r24, Z+
 264:	6f 01       	movw	r12, r30
 266:	88 23       	and	r24, r24
 268:	09 f4       	brne	.+2      	; 0x26c <vfprintf+0x3a>
 26a:	ab c1       	rjmp	.+854    	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
 26c:	85 32       	cpi	r24, 0x25	; 37
 26e:	39 f4       	brne	.+14     	; 0x27e <vfprintf+0x4c>
 270:	93 fd       	sbrc	r25, 3
 272:	85 91       	lpm	r24, Z+
 274:	93 ff       	sbrs	r25, 3
 276:	81 91       	ld	r24, Z+
 278:	6f 01       	movw	r12, r30
 27a:	85 32       	cpi	r24, 0x25	; 37
 27c:	29 f4       	brne	.+10     	; 0x288 <vfprintf+0x56>
 27e:	b7 01       	movw	r22, r14
 280:	90 e0       	ldi	r25, 0x00	; 0
 282:	0e 94 01 03 	call	0x602	; 0x602 <fputc>
 286:	e7 cf       	rjmp	.-50     	; 0x256 <vfprintf+0x24>
 288:	51 2c       	mov	r5, r1
 28a:	31 2c       	mov	r3, r1
 28c:	20 e0       	ldi	r18, 0x00	; 0
 28e:	20 32       	cpi	r18, 0x20	; 32
 290:	a0 f4       	brcc	.+40     	; 0x2ba <vfprintf+0x88>
 292:	8b 32       	cpi	r24, 0x2B	; 43
 294:	69 f0       	breq	.+26     	; 0x2b0 <vfprintf+0x7e>
 296:	30 f4       	brcc	.+12     	; 0x2a4 <vfprintf+0x72>
 298:	80 32       	cpi	r24, 0x20	; 32
 29a:	59 f0       	breq	.+22     	; 0x2b2 <vfprintf+0x80>
 29c:	83 32       	cpi	r24, 0x23	; 35
 29e:	69 f4       	brne	.+26     	; 0x2ba <vfprintf+0x88>
 2a0:	20 61       	ori	r18, 0x10	; 16
 2a2:	2c c0       	rjmp	.+88     	; 0x2fc <vfprintf+0xca>
 2a4:	8d 32       	cpi	r24, 0x2D	; 45
 2a6:	39 f0       	breq	.+14     	; 0x2b6 <vfprintf+0x84>
 2a8:	80 33       	cpi	r24, 0x30	; 48
 2aa:	39 f4       	brne	.+14     	; 0x2ba <vfprintf+0x88>
 2ac:	21 60       	ori	r18, 0x01	; 1
 2ae:	26 c0       	rjmp	.+76     	; 0x2fc <vfprintf+0xca>
 2b0:	22 60       	ori	r18, 0x02	; 2
 2b2:	24 60       	ori	r18, 0x04	; 4
 2b4:	23 c0       	rjmp	.+70     	; 0x2fc <vfprintf+0xca>
 2b6:	28 60       	ori	r18, 0x08	; 8
 2b8:	21 c0       	rjmp	.+66     	; 0x2fc <vfprintf+0xca>
 2ba:	27 fd       	sbrc	r18, 7
 2bc:	27 c0       	rjmp	.+78     	; 0x30c <vfprintf+0xda>
 2be:	30 ed       	ldi	r19, 0xD0	; 208
 2c0:	38 0f       	add	r19, r24
 2c2:	3a 30       	cpi	r19, 0x0A	; 10
 2c4:	78 f4       	brcc	.+30     	; 0x2e4 <vfprintf+0xb2>
 2c6:	26 ff       	sbrs	r18, 6
 2c8:	06 c0       	rjmp	.+12     	; 0x2d6 <vfprintf+0xa4>
 2ca:	fa e0       	ldi	r31, 0x0A	; 10
 2cc:	5f 9e       	mul	r5, r31
 2ce:	30 0d       	add	r19, r0
 2d0:	11 24       	eor	r1, r1
 2d2:	53 2e       	mov	r5, r19
 2d4:	13 c0       	rjmp	.+38     	; 0x2fc <vfprintf+0xca>
 2d6:	8a e0       	ldi	r24, 0x0A	; 10
 2d8:	38 9e       	mul	r3, r24
 2da:	30 0d       	add	r19, r0
 2dc:	11 24       	eor	r1, r1
 2de:	33 2e       	mov	r3, r19
 2e0:	20 62       	ori	r18, 0x20	; 32
 2e2:	0c c0       	rjmp	.+24     	; 0x2fc <vfprintf+0xca>
 2e4:	8e 32       	cpi	r24, 0x2E	; 46
 2e6:	21 f4       	brne	.+8      	; 0x2f0 <vfprintf+0xbe>
 2e8:	26 fd       	sbrc	r18, 6
 2ea:	6b c1       	rjmp	.+726    	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
 2ec:	20 64       	ori	r18, 0x40	; 64
 2ee:	06 c0       	rjmp	.+12     	; 0x2fc <vfprintf+0xca>
 2f0:	8c 36       	cpi	r24, 0x6C	; 108
 2f2:	11 f4       	brne	.+4      	; 0x2f8 <vfprintf+0xc6>
 2f4:	20 68       	ori	r18, 0x80	; 128
 2f6:	02 c0       	rjmp	.+4      	; 0x2fc <vfprintf+0xca>
 2f8:	88 36       	cpi	r24, 0x68	; 104
 2fa:	41 f4       	brne	.+16     	; 0x30c <vfprintf+0xda>
 2fc:	f6 01       	movw	r30, r12
 2fe:	93 fd       	sbrc	r25, 3
 300:	85 91       	lpm	r24, Z+
 302:	93 ff       	sbrs	r25, 3
 304:	81 91       	ld	r24, Z+
 306:	6f 01       	movw	r12, r30
 308:	81 11       	cpse	r24, r1
 30a:	c1 cf       	rjmp	.-126    	; 0x28e <vfprintf+0x5c>
 30c:	98 2f       	mov	r25, r24
 30e:	9f 7d       	andi	r25, 0xDF	; 223
 310:	95 54       	subi	r25, 0x45	; 69
 312:	93 30       	cpi	r25, 0x03	; 3
 314:	28 f4       	brcc	.+10     	; 0x320 <vfprintf+0xee>
 316:	0c 5f       	subi	r16, 0xFC	; 252
 318:	1f 4f       	sbci	r17, 0xFF	; 255
 31a:	ff e3       	ldi	r31, 0x3F	; 63
 31c:	f9 83       	std	Y+1, r31	; 0x01
 31e:	0d c0       	rjmp	.+26     	; 0x33a <vfprintf+0x108>
 320:	83 36       	cpi	r24, 0x63	; 99
 322:	31 f0       	breq	.+12     	; 0x330 <vfprintf+0xfe>
 324:	83 37       	cpi	r24, 0x73	; 115
 326:	71 f0       	breq	.+28     	; 0x344 <vfprintf+0x112>
 328:	83 35       	cpi	r24, 0x53	; 83
 32a:	09 f0       	breq	.+2      	; 0x32e <vfprintf+0xfc>
 32c:	5b c0       	rjmp	.+182    	; 0x3e4 <vfprintf+0x1b2>
 32e:	22 c0       	rjmp	.+68     	; 0x374 <vfprintf+0x142>
 330:	f8 01       	movw	r30, r16
 332:	80 81       	ld	r24, Z
 334:	89 83       	std	Y+1, r24	; 0x01
 336:	0e 5f       	subi	r16, 0xFE	; 254
 338:	1f 4f       	sbci	r17, 0xFF	; 255
 33a:	44 24       	eor	r4, r4
 33c:	43 94       	inc	r4
 33e:	51 2c       	mov	r5, r1
 340:	54 01       	movw	r10, r8
 342:	15 c0       	rjmp	.+42     	; 0x36e <vfprintf+0x13c>
 344:	38 01       	movw	r6, r16
 346:	f2 e0       	ldi	r31, 0x02	; 2
 348:	6f 0e       	add	r6, r31
 34a:	71 1c       	adc	r7, r1
 34c:	f8 01       	movw	r30, r16
 34e:	a0 80       	ld	r10, Z
 350:	b1 80       	ldd	r11, Z+1	; 0x01
 352:	26 ff       	sbrs	r18, 6
 354:	03 c0       	rjmp	.+6      	; 0x35c <vfprintf+0x12a>
 356:	65 2d       	mov	r22, r5
 358:	70 e0       	ldi	r23, 0x00	; 0
 35a:	02 c0       	rjmp	.+4      	; 0x360 <vfprintf+0x12e>
 35c:	6f ef       	ldi	r22, 0xFF	; 255
 35e:	7f ef       	ldi	r23, 0xFF	; 255
 360:	c5 01       	movw	r24, r10
 362:	2c 87       	std	Y+12, r18	; 0x0c
 364:	0e 94 f6 02 	call	0x5ec	; 0x5ec <strnlen>
 368:	2c 01       	movw	r4, r24
 36a:	83 01       	movw	r16, r6
 36c:	2c 85       	ldd	r18, Y+12	; 0x0c
 36e:	2f 77       	andi	r18, 0x7F	; 127
 370:	22 2e       	mov	r2, r18
 372:	17 c0       	rjmp	.+46     	; 0x3a2 <vfprintf+0x170>
 374:	38 01       	movw	r6, r16
 376:	f2 e0       	ldi	r31, 0x02	; 2
 378:	6f 0e       	add	r6, r31
 37a:	71 1c       	adc	r7, r1
 37c:	f8 01       	movw	r30, r16
 37e:	a0 80       	ld	r10, Z
 380:	b1 80       	ldd	r11, Z+1	; 0x01
 382:	26 ff       	sbrs	r18, 6
 384:	03 c0       	rjmp	.+6      	; 0x38c <vfprintf+0x15a>
 386:	65 2d       	mov	r22, r5
 388:	70 e0       	ldi	r23, 0x00	; 0
 38a:	02 c0       	rjmp	.+4      	; 0x390 <vfprintf+0x15e>
 38c:	6f ef       	ldi	r22, 0xFF	; 255
 38e:	7f ef       	ldi	r23, 0xFF	; 255
 390:	c5 01       	movw	r24, r10
 392:	2c 87       	std	Y+12, r18	; 0x0c
 394:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <strnlen_P>
 398:	2c 01       	movw	r4, r24
 39a:	2c 85       	ldd	r18, Y+12	; 0x0c
 39c:	20 68       	ori	r18, 0x80	; 128
 39e:	22 2e       	mov	r2, r18
 3a0:	83 01       	movw	r16, r6
 3a2:	23 fc       	sbrc	r2, 3
 3a4:	1b c0       	rjmp	.+54     	; 0x3dc <vfprintf+0x1aa>
 3a6:	83 2d       	mov	r24, r3
 3a8:	90 e0       	ldi	r25, 0x00	; 0
 3aa:	48 16       	cp	r4, r24
 3ac:	59 06       	cpc	r5, r25
 3ae:	b0 f4       	brcc	.+44     	; 0x3dc <vfprintf+0x1aa>
 3b0:	b7 01       	movw	r22, r14
 3b2:	80 e2       	ldi	r24, 0x20	; 32
 3b4:	90 e0       	ldi	r25, 0x00	; 0
 3b6:	0e 94 01 03 	call	0x602	; 0x602 <fputc>
 3ba:	3a 94       	dec	r3
 3bc:	f4 cf       	rjmp	.-24     	; 0x3a6 <vfprintf+0x174>
 3be:	f5 01       	movw	r30, r10
 3c0:	27 fc       	sbrc	r2, 7
 3c2:	85 91       	lpm	r24, Z+
 3c4:	27 fe       	sbrs	r2, 7
 3c6:	81 91       	ld	r24, Z+
 3c8:	5f 01       	movw	r10, r30
 3ca:	b7 01       	movw	r22, r14
 3cc:	90 e0       	ldi	r25, 0x00	; 0
 3ce:	0e 94 01 03 	call	0x602	; 0x602 <fputc>
 3d2:	31 10       	cpse	r3, r1
 3d4:	3a 94       	dec	r3
 3d6:	f1 e0       	ldi	r31, 0x01	; 1
 3d8:	4f 1a       	sub	r4, r31
 3da:	51 08       	sbc	r5, r1
 3dc:	41 14       	cp	r4, r1
 3de:	51 04       	cpc	r5, r1
 3e0:	71 f7       	brne	.-36     	; 0x3be <vfprintf+0x18c>
 3e2:	e5 c0       	rjmp	.+458    	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 3e4:	84 36       	cpi	r24, 0x64	; 100
 3e6:	11 f0       	breq	.+4      	; 0x3ec <vfprintf+0x1ba>
 3e8:	89 36       	cpi	r24, 0x69	; 105
 3ea:	39 f5       	brne	.+78     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 3ec:	f8 01       	movw	r30, r16
 3ee:	27 ff       	sbrs	r18, 7
 3f0:	07 c0       	rjmp	.+14     	; 0x400 <__LOCK_REGION_LENGTH__>
 3f2:	60 81       	ld	r22, Z
 3f4:	71 81       	ldd	r23, Z+1	; 0x01
 3f6:	82 81       	ldd	r24, Z+2	; 0x02
 3f8:	93 81       	ldd	r25, Z+3	; 0x03
 3fa:	0c 5f       	subi	r16, 0xFC	; 252
 3fc:	1f 4f       	sbci	r17, 0xFF	; 255
 3fe:	08 c0       	rjmp	.+16     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
 400:	60 81       	ld	r22, Z
 402:	71 81       	ldd	r23, Z+1	; 0x01
 404:	07 2e       	mov	r0, r23
 406:	00 0c       	add	r0, r0
 408:	88 0b       	sbc	r24, r24
 40a:	99 0b       	sbc	r25, r25
 40c:	0e 5f       	subi	r16, 0xFE	; 254
 40e:	1f 4f       	sbci	r17, 0xFF	; 255
 410:	2f 76       	andi	r18, 0x6F	; 111
 412:	72 2e       	mov	r7, r18
 414:	97 ff       	sbrs	r25, 7
 416:	09 c0       	rjmp	.+18     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 418:	90 95       	com	r25
 41a:	80 95       	com	r24
 41c:	70 95       	com	r23
 41e:	61 95       	neg	r22
 420:	7f 4f       	sbci	r23, 0xFF	; 255
 422:	8f 4f       	sbci	r24, 0xFF	; 255
 424:	9f 4f       	sbci	r25, 0xFF	; 255
 426:	20 68       	ori	r18, 0x80	; 128
 428:	72 2e       	mov	r7, r18
 42a:	2a e0       	ldi	r18, 0x0A	; 10
 42c:	30 e0       	ldi	r19, 0x00	; 0
 42e:	a4 01       	movw	r20, r8
 430:	0e 94 39 03 	call	0x672	; 0x672 <__ultoa_invert>
 434:	a8 2e       	mov	r10, r24
 436:	a8 18       	sub	r10, r8
 438:	44 c0       	rjmp	.+136    	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 43a:	85 37       	cpi	r24, 0x75	; 117
 43c:	29 f4       	brne	.+10     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 43e:	2f 7e       	andi	r18, 0xEF	; 239
 440:	b2 2e       	mov	r11, r18
 442:	2a e0       	ldi	r18, 0x0A	; 10
 444:	30 e0       	ldi	r19, 0x00	; 0
 446:	25 c0       	rjmp	.+74     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 448:	f2 2f       	mov	r31, r18
 44a:	f9 7f       	andi	r31, 0xF9	; 249
 44c:	bf 2e       	mov	r11, r31
 44e:	8f 36       	cpi	r24, 0x6F	; 111
 450:	c1 f0       	breq	.+48     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 452:	18 f4       	brcc	.+6      	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 454:	88 35       	cpi	r24, 0x58	; 88
 456:	79 f0       	breq	.+30     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 458:	b4 c0       	rjmp	.+360    	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
 45a:	80 37       	cpi	r24, 0x70	; 112
 45c:	19 f0       	breq	.+6      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 45e:	88 37       	cpi	r24, 0x78	; 120
 460:	21 f0       	breq	.+8      	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 462:	af c0       	rjmp	.+350    	; 0x5c2 <__LOCK_REGION_LENGTH__+0x1c2>
 464:	2f 2f       	mov	r18, r31
 466:	20 61       	ori	r18, 0x10	; 16
 468:	b2 2e       	mov	r11, r18
 46a:	b4 fe       	sbrs	r11, 4
 46c:	0d c0       	rjmp	.+26     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 46e:	8b 2d       	mov	r24, r11
 470:	84 60       	ori	r24, 0x04	; 4
 472:	b8 2e       	mov	r11, r24
 474:	09 c0       	rjmp	.+18     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 476:	24 ff       	sbrs	r18, 4
 478:	0a c0       	rjmp	.+20     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 47a:	9f 2f       	mov	r25, r31
 47c:	96 60       	ori	r25, 0x06	; 6
 47e:	b9 2e       	mov	r11, r25
 480:	06 c0       	rjmp	.+12     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
 482:	28 e0       	ldi	r18, 0x08	; 8
 484:	30 e0       	ldi	r19, 0x00	; 0
 486:	05 c0       	rjmp	.+10     	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 488:	20 e1       	ldi	r18, 0x10	; 16
 48a:	30 e0       	ldi	r19, 0x00	; 0
 48c:	02 c0       	rjmp	.+4      	; 0x492 <__LOCK_REGION_LENGTH__+0x92>
 48e:	20 e1       	ldi	r18, 0x10	; 16
 490:	32 e0       	ldi	r19, 0x02	; 2
 492:	f8 01       	movw	r30, r16
 494:	b7 fe       	sbrs	r11, 7
 496:	07 c0       	rjmp	.+14     	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 498:	60 81       	ld	r22, Z
 49a:	71 81       	ldd	r23, Z+1	; 0x01
 49c:	82 81       	ldd	r24, Z+2	; 0x02
 49e:	93 81       	ldd	r25, Z+3	; 0x03
 4a0:	0c 5f       	subi	r16, 0xFC	; 252
 4a2:	1f 4f       	sbci	r17, 0xFF	; 255
 4a4:	06 c0       	rjmp	.+12     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 4a6:	60 81       	ld	r22, Z
 4a8:	71 81       	ldd	r23, Z+1	; 0x01
 4aa:	80 e0       	ldi	r24, 0x00	; 0
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	0e 5f       	subi	r16, 0xFE	; 254
 4b0:	1f 4f       	sbci	r17, 0xFF	; 255
 4b2:	a4 01       	movw	r20, r8
 4b4:	0e 94 39 03 	call	0x672	; 0x672 <__ultoa_invert>
 4b8:	a8 2e       	mov	r10, r24
 4ba:	a8 18       	sub	r10, r8
 4bc:	fb 2d       	mov	r31, r11
 4be:	ff 77       	andi	r31, 0x7F	; 127
 4c0:	7f 2e       	mov	r7, r31
 4c2:	76 fe       	sbrs	r7, 6
 4c4:	0b c0       	rjmp	.+22     	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4c6:	37 2d       	mov	r19, r7
 4c8:	3e 7f       	andi	r19, 0xFE	; 254
 4ca:	a5 14       	cp	r10, r5
 4cc:	50 f4       	brcc	.+20     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4ce:	74 fe       	sbrs	r7, 4
 4d0:	0a c0       	rjmp	.+20     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4d2:	72 fc       	sbrc	r7, 2
 4d4:	08 c0       	rjmp	.+16     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4d6:	37 2d       	mov	r19, r7
 4d8:	3e 7e       	andi	r19, 0xEE	; 238
 4da:	05 c0       	rjmp	.+10     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
 4dc:	ba 2c       	mov	r11, r10
 4de:	37 2d       	mov	r19, r7
 4e0:	03 c0       	rjmp	.+6      	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 4e2:	ba 2c       	mov	r11, r10
 4e4:	01 c0       	rjmp	.+2      	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 4e6:	b5 2c       	mov	r11, r5
 4e8:	34 ff       	sbrs	r19, 4
 4ea:	0d c0       	rjmp	.+26     	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 4ec:	fe 01       	movw	r30, r28
 4ee:	ea 0d       	add	r30, r10
 4f0:	f1 1d       	adc	r31, r1
 4f2:	80 81       	ld	r24, Z
 4f4:	80 33       	cpi	r24, 0x30	; 48
 4f6:	11 f4       	brne	.+4      	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 4f8:	39 7e       	andi	r19, 0xE9	; 233
 4fa:	09 c0       	rjmp	.+18     	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 4fc:	32 ff       	sbrs	r19, 2
 4fe:	06 c0       	rjmp	.+12     	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 500:	b3 94       	inc	r11
 502:	b3 94       	inc	r11
 504:	04 c0       	rjmp	.+8      	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 506:	83 2f       	mov	r24, r19
 508:	86 78       	andi	r24, 0x86	; 134
 50a:	09 f0       	breq	.+2      	; 0x50e <__LOCK_REGION_LENGTH__+0x10e>
 50c:	b3 94       	inc	r11
 50e:	33 fd       	sbrc	r19, 3
 510:	13 c0       	rjmp	.+38     	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
 512:	30 ff       	sbrs	r19, 0
 514:	06 c0       	rjmp	.+12     	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 516:	5a 2c       	mov	r5, r10
 518:	b3 14       	cp	r11, r3
 51a:	18 f4       	brcc	.+6      	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 51c:	53 0c       	add	r5, r3
 51e:	5b 18       	sub	r5, r11
 520:	b3 2c       	mov	r11, r3
 522:	b3 14       	cp	r11, r3
 524:	68 f4       	brcc	.+26     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 526:	b7 01       	movw	r22, r14
 528:	80 e2       	ldi	r24, 0x20	; 32
 52a:	90 e0       	ldi	r25, 0x00	; 0
 52c:	3c 87       	std	Y+12, r19	; 0x0c
 52e:	0e 94 01 03 	call	0x602	; 0x602 <fputc>
 532:	b3 94       	inc	r11
 534:	3c 85       	ldd	r19, Y+12	; 0x0c
 536:	f5 cf       	rjmp	.-22     	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 538:	b3 14       	cp	r11, r3
 53a:	10 f4       	brcc	.+4      	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 53c:	3b 18       	sub	r3, r11
 53e:	01 c0       	rjmp	.+2      	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
 540:	31 2c       	mov	r3, r1
 542:	34 ff       	sbrs	r19, 4
 544:	12 c0       	rjmp	.+36     	; 0x56a <__LOCK_REGION_LENGTH__+0x16a>
 546:	b7 01       	movw	r22, r14
 548:	80 e3       	ldi	r24, 0x30	; 48
 54a:	90 e0       	ldi	r25, 0x00	; 0
 54c:	3c 87       	std	Y+12, r19	; 0x0c
 54e:	0e 94 01 03 	call	0x602	; 0x602 <fputc>
 552:	3c 85       	ldd	r19, Y+12	; 0x0c
 554:	32 ff       	sbrs	r19, 2
 556:	17 c0       	rjmp	.+46     	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
 558:	31 fd       	sbrc	r19, 1
 55a:	03 c0       	rjmp	.+6      	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 55c:	88 e7       	ldi	r24, 0x78	; 120
 55e:	90 e0       	ldi	r25, 0x00	; 0
 560:	02 c0       	rjmp	.+4      	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 562:	88 e5       	ldi	r24, 0x58	; 88
 564:	90 e0       	ldi	r25, 0x00	; 0
 566:	b7 01       	movw	r22, r14
 568:	0c c0       	rjmp	.+24     	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 56a:	83 2f       	mov	r24, r19
 56c:	86 78       	andi	r24, 0x86	; 134
 56e:	59 f0       	breq	.+22     	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
 570:	31 ff       	sbrs	r19, 1
 572:	02 c0       	rjmp	.+4      	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 574:	8b e2       	ldi	r24, 0x2B	; 43
 576:	01 c0       	rjmp	.+2      	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 578:	80 e2       	ldi	r24, 0x20	; 32
 57a:	37 fd       	sbrc	r19, 7
 57c:	8d e2       	ldi	r24, 0x2D	; 45
 57e:	b7 01       	movw	r22, r14
 580:	90 e0       	ldi	r25, 0x00	; 0
 582:	0e 94 01 03 	call	0x602	; 0x602 <fputc>
 586:	a5 14       	cp	r10, r5
 588:	38 f4       	brcc	.+14     	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 58a:	b7 01       	movw	r22, r14
 58c:	80 e3       	ldi	r24, 0x30	; 48
 58e:	90 e0       	ldi	r25, 0x00	; 0
 590:	0e 94 01 03 	call	0x602	; 0x602 <fputc>
 594:	5a 94       	dec	r5
 596:	f7 cf       	rjmp	.-18     	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
 598:	aa 94       	dec	r10
 59a:	f4 01       	movw	r30, r8
 59c:	ea 0d       	add	r30, r10
 59e:	f1 1d       	adc	r31, r1
 5a0:	80 81       	ld	r24, Z
 5a2:	b7 01       	movw	r22, r14
 5a4:	90 e0       	ldi	r25, 0x00	; 0
 5a6:	0e 94 01 03 	call	0x602	; 0x602 <fputc>
 5aa:	a1 10       	cpse	r10, r1
 5ac:	f5 cf       	rjmp	.-22     	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 5ae:	33 20       	and	r3, r3
 5b0:	09 f4       	brne	.+2      	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 5b2:	51 ce       	rjmp	.-862    	; 0x256 <vfprintf+0x24>
 5b4:	b7 01       	movw	r22, r14
 5b6:	80 e2       	ldi	r24, 0x20	; 32
 5b8:	90 e0       	ldi	r25, 0x00	; 0
 5ba:	0e 94 01 03 	call	0x602	; 0x602 <fputc>
 5be:	3a 94       	dec	r3
 5c0:	f6 cf       	rjmp	.-20     	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 5c2:	f7 01       	movw	r30, r14
 5c4:	86 81       	ldd	r24, Z+6	; 0x06
 5c6:	97 81       	ldd	r25, Z+7	; 0x07
 5c8:	02 c0       	rjmp	.+4      	; 0x5ce <__LOCK_REGION_LENGTH__+0x1ce>
 5ca:	8f ef       	ldi	r24, 0xFF	; 255
 5cc:	9f ef       	ldi	r25, 0xFF	; 255
 5ce:	2c 96       	adiw	r28, 0x0c	; 12
 5d0:	e2 e1       	ldi	r30, 0x12	; 18
 5d2:	0c 94 b3 03 	jmp	0x766	; 0x766 <__epilogue_restores__>

000005d6 <strnlen_P>:
 5d6:	fc 01       	movw	r30, r24
 5d8:	05 90       	lpm	r0, Z+
 5da:	61 50       	subi	r22, 0x01	; 1
 5dc:	70 40       	sbci	r23, 0x00	; 0
 5de:	01 10       	cpse	r0, r1
 5e0:	d8 f7       	brcc	.-10     	; 0x5d8 <strnlen_P+0x2>
 5e2:	80 95       	com	r24
 5e4:	90 95       	com	r25
 5e6:	8e 0f       	add	r24, r30
 5e8:	9f 1f       	adc	r25, r31
 5ea:	08 95       	ret

000005ec <strnlen>:
 5ec:	fc 01       	movw	r30, r24
 5ee:	61 50       	subi	r22, 0x01	; 1
 5f0:	70 40       	sbci	r23, 0x00	; 0
 5f2:	01 90       	ld	r0, Z+
 5f4:	01 10       	cpse	r0, r1
 5f6:	d8 f7       	brcc	.-10     	; 0x5ee <strnlen+0x2>
 5f8:	80 95       	com	r24
 5fa:	90 95       	com	r25
 5fc:	8e 0f       	add	r24, r30
 5fe:	9f 1f       	adc	r25, r31
 600:	08 95       	ret

00000602 <fputc>:
 602:	0f 93       	push	r16
 604:	1f 93       	push	r17
 606:	cf 93       	push	r28
 608:	df 93       	push	r29
 60a:	fb 01       	movw	r30, r22
 60c:	23 81       	ldd	r18, Z+3	; 0x03
 60e:	21 fd       	sbrc	r18, 1
 610:	03 c0       	rjmp	.+6      	; 0x618 <fputc+0x16>
 612:	8f ef       	ldi	r24, 0xFF	; 255
 614:	9f ef       	ldi	r25, 0xFF	; 255
 616:	28 c0       	rjmp	.+80     	; 0x668 <fputc+0x66>
 618:	22 ff       	sbrs	r18, 2
 61a:	16 c0       	rjmp	.+44     	; 0x648 <fputc+0x46>
 61c:	46 81       	ldd	r20, Z+6	; 0x06
 61e:	57 81       	ldd	r21, Z+7	; 0x07
 620:	24 81       	ldd	r18, Z+4	; 0x04
 622:	35 81       	ldd	r19, Z+5	; 0x05
 624:	42 17       	cp	r20, r18
 626:	53 07       	cpc	r21, r19
 628:	44 f4       	brge	.+16     	; 0x63a <fputc+0x38>
 62a:	a0 81       	ld	r26, Z
 62c:	b1 81       	ldd	r27, Z+1	; 0x01
 62e:	9d 01       	movw	r18, r26
 630:	2f 5f       	subi	r18, 0xFF	; 255
 632:	3f 4f       	sbci	r19, 0xFF	; 255
 634:	31 83       	std	Z+1, r19	; 0x01
 636:	20 83       	st	Z, r18
 638:	8c 93       	st	X, r24
 63a:	26 81       	ldd	r18, Z+6	; 0x06
 63c:	37 81       	ldd	r19, Z+7	; 0x07
 63e:	2f 5f       	subi	r18, 0xFF	; 255
 640:	3f 4f       	sbci	r19, 0xFF	; 255
 642:	37 83       	std	Z+7, r19	; 0x07
 644:	26 83       	std	Z+6, r18	; 0x06
 646:	10 c0       	rjmp	.+32     	; 0x668 <fputc+0x66>
 648:	eb 01       	movw	r28, r22
 64a:	09 2f       	mov	r16, r25
 64c:	18 2f       	mov	r17, r24
 64e:	00 84       	ldd	r0, Z+8	; 0x08
 650:	f1 85       	ldd	r31, Z+9	; 0x09
 652:	e0 2d       	mov	r30, r0
 654:	09 95       	icall
 656:	89 2b       	or	r24, r25
 658:	e1 f6       	brne	.-72     	; 0x612 <fputc+0x10>
 65a:	8e 81       	ldd	r24, Y+6	; 0x06
 65c:	9f 81       	ldd	r25, Y+7	; 0x07
 65e:	01 96       	adiw	r24, 0x01	; 1
 660:	9f 83       	std	Y+7, r25	; 0x07
 662:	8e 83       	std	Y+6, r24	; 0x06
 664:	81 2f       	mov	r24, r17
 666:	90 2f       	mov	r25, r16
 668:	df 91       	pop	r29
 66a:	cf 91       	pop	r28
 66c:	1f 91       	pop	r17
 66e:	0f 91       	pop	r16
 670:	08 95       	ret

00000672 <__ultoa_invert>:
 672:	fa 01       	movw	r30, r20
 674:	aa 27       	eor	r26, r26
 676:	28 30       	cpi	r18, 0x08	; 8
 678:	51 f1       	breq	.+84     	; 0x6ce <__ultoa_invert+0x5c>
 67a:	20 31       	cpi	r18, 0x10	; 16
 67c:	81 f1       	breq	.+96     	; 0x6de <__ultoa_invert+0x6c>
 67e:	e8 94       	clt
 680:	6f 93       	push	r22
 682:	6e 7f       	andi	r22, 0xFE	; 254
 684:	6e 5f       	subi	r22, 0xFE	; 254
 686:	7f 4f       	sbci	r23, 0xFF	; 255
 688:	8f 4f       	sbci	r24, 0xFF	; 255
 68a:	9f 4f       	sbci	r25, 0xFF	; 255
 68c:	af 4f       	sbci	r26, 0xFF	; 255
 68e:	b1 e0       	ldi	r27, 0x01	; 1
 690:	3e d0       	rcall	.+124    	; 0x70e <__ultoa_invert+0x9c>
 692:	b4 e0       	ldi	r27, 0x04	; 4
 694:	3c d0       	rcall	.+120    	; 0x70e <__ultoa_invert+0x9c>
 696:	67 0f       	add	r22, r23
 698:	78 1f       	adc	r23, r24
 69a:	89 1f       	adc	r24, r25
 69c:	9a 1f       	adc	r25, r26
 69e:	a1 1d       	adc	r26, r1
 6a0:	68 0f       	add	r22, r24
 6a2:	79 1f       	adc	r23, r25
 6a4:	8a 1f       	adc	r24, r26
 6a6:	91 1d       	adc	r25, r1
 6a8:	a1 1d       	adc	r26, r1
 6aa:	6a 0f       	add	r22, r26
 6ac:	71 1d       	adc	r23, r1
 6ae:	81 1d       	adc	r24, r1
 6b0:	91 1d       	adc	r25, r1
 6b2:	a1 1d       	adc	r26, r1
 6b4:	20 d0       	rcall	.+64     	; 0x6f6 <__ultoa_invert+0x84>
 6b6:	09 f4       	brne	.+2      	; 0x6ba <__ultoa_invert+0x48>
 6b8:	68 94       	set
 6ba:	3f 91       	pop	r19
 6bc:	2a e0       	ldi	r18, 0x0A	; 10
 6be:	26 9f       	mul	r18, r22
 6c0:	11 24       	eor	r1, r1
 6c2:	30 19       	sub	r19, r0
 6c4:	30 5d       	subi	r19, 0xD0	; 208
 6c6:	31 93       	st	Z+, r19
 6c8:	de f6       	brtc	.-74     	; 0x680 <__ultoa_invert+0xe>
 6ca:	cf 01       	movw	r24, r30
 6cc:	08 95       	ret
 6ce:	46 2f       	mov	r20, r22
 6d0:	47 70       	andi	r20, 0x07	; 7
 6d2:	40 5d       	subi	r20, 0xD0	; 208
 6d4:	41 93       	st	Z+, r20
 6d6:	b3 e0       	ldi	r27, 0x03	; 3
 6d8:	0f d0       	rcall	.+30     	; 0x6f8 <__ultoa_invert+0x86>
 6da:	c9 f7       	brne	.-14     	; 0x6ce <__ultoa_invert+0x5c>
 6dc:	f6 cf       	rjmp	.-20     	; 0x6ca <__ultoa_invert+0x58>
 6de:	46 2f       	mov	r20, r22
 6e0:	4f 70       	andi	r20, 0x0F	; 15
 6e2:	40 5d       	subi	r20, 0xD0	; 208
 6e4:	4a 33       	cpi	r20, 0x3A	; 58
 6e6:	18 f0       	brcs	.+6      	; 0x6ee <__ultoa_invert+0x7c>
 6e8:	49 5d       	subi	r20, 0xD9	; 217
 6ea:	31 fd       	sbrc	r19, 1
 6ec:	40 52       	subi	r20, 0x20	; 32
 6ee:	41 93       	st	Z+, r20
 6f0:	02 d0       	rcall	.+4      	; 0x6f6 <__ultoa_invert+0x84>
 6f2:	a9 f7       	brne	.-22     	; 0x6de <__ultoa_invert+0x6c>
 6f4:	ea cf       	rjmp	.-44     	; 0x6ca <__ultoa_invert+0x58>
 6f6:	b4 e0       	ldi	r27, 0x04	; 4
 6f8:	a6 95       	lsr	r26
 6fa:	97 95       	ror	r25
 6fc:	87 95       	ror	r24
 6fe:	77 95       	ror	r23
 700:	67 95       	ror	r22
 702:	ba 95       	dec	r27
 704:	c9 f7       	brne	.-14     	; 0x6f8 <__ultoa_invert+0x86>
 706:	00 97       	sbiw	r24, 0x00	; 0
 708:	61 05       	cpc	r22, r1
 70a:	71 05       	cpc	r23, r1
 70c:	08 95       	ret
 70e:	9b 01       	movw	r18, r22
 710:	ac 01       	movw	r20, r24
 712:	0a 2e       	mov	r0, r26
 714:	06 94       	lsr	r0
 716:	57 95       	ror	r21
 718:	47 95       	ror	r20
 71a:	37 95       	ror	r19
 71c:	27 95       	ror	r18
 71e:	ba 95       	dec	r27
 720:	c9 f7       	brne	.-14     	; 0x714 <__ultoa_invert+0xa2>
 722:	62 0f       	add	r22, r18
 724:	73 1f       	adc	r23, r19
 726:	84 1f       	adc	r24, r20
 728:	95 1f       	adc	r25, r21
 72a:	a0 1d       	adc	r26, r0
 72c:	08 95       	ret

0000072e <__prologue_saves__>:
 72e:	2f 92       	push	r2
 730:	3f 92       	push	r3
 732:	4f 92       	push	r4
 734:	5f 92       	push	r5
 736:	6f 92       	push	r6
 738:	7f 92       	push	r7
 73a:	8f 92       	push	r8
 73c:	9f 92       	push	r9
 73e:	af 92       	push	r10
 740:	bf 92       	push	r11
 742:	cf 92       	push	r12
 744:	df 92       	push	r13
 746:	ef 92       	push	r14
 748:	ff 92       	push	r15
 74a:	0f 93       	push	r16
 74c:	1f 93       	push	r17
 74e:	cf 93       	push	r28
 750:	df 93       	push	r29
 752:	cd b7       	in	r28, 0x3d	; 61
 754:	de b7       	in	r29, 0x3e	; 62
 756:	ca 1b       	sub	r28, r26
 758:	db 0b       	sbc	r29, r27
 75a:	0f b6       	in	r0, 0x3f	; 63
 75c:	f8 94       	cli
 75e:	de bf       	out	0x3e, r29	; 62
 760:	0f be       	out	0x3f, r0	; 63
 762:	cd bf       	out	0x3d, r28	; 61
 764:	09 94       	ijmp

00000766 <__epilogue_restores__>:
 766:	2a 88       	ldd	r2, Y+18	; 0x12
 768:	39 88       	ldd	r3, Y+17	; 0x11
 76a:	48 88       	ldd	r4, Y+16	; 0x10
 76c:	5f 84       	ldd	r5, Y+15	; 0x0f
 76e:	6e 84       	ldd	r6, Y+14	; 0x0e
 770:	7d 84       	ldd	r7, Y+13	; 0x0d
 772:	8c 84       	ldd	r8, Y+12	; 0x0c
 774:	9b 84       	ldd	r9, Y+11	; 0x0b
 776:	aa 84       	ldd	r10, Y+10	; 0x0a
 778:	b9 84       	ldd	r11, Y+9	; 0x09
 77a:	c8 84       	ldd	r12, Y+8	; 0x08
 77c:	df 80       	ldd	r13, Y+7	; 0x07
 77e:	ee 80       	ldd	r14, Y+6	; 0x06
 780:	fd 80       	ldd	r15, Y+5	; 0x05
 782:	0c 81       	ldd	r16, Y+4	; 0x04
 784:	1b 81       	ldd	r17, Y+3	; 0x03
 786:	aa 81       	ldd	r26, Y+2	; 0x02
 788:	b9 81       	ldd	r27, Y+1	; 0x01
 78a:	ce 0f       	add	r28, r30
 78c:	d1 1d       	adc	r29, r1
 78e:	0f b6       	in	r0, 0x3f	; 63
 790:	f8 94       	cli
 792:	de bf       	out	0x3e, r29	; 62
 794:	0f be       	out	0x3f, r0	; 63
 796:	cd bf       	out	0x3d, r28	; 61
 798:	ed 01       	movw	r28, r26
 79a:	08 95       	ret

0000079c <_exit>:
 79c:	f8 94       	cli

0000079e <__stop_program>:
 79e:	ff cf       	rjmp	.-2      	; 0x79e <__stop_program>

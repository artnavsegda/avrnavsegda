
spi.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000786  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000003c  00800060  00000786  0000081a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  0080009c  0080009c  00000856  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000856  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008b4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  000008f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009fe  00000000  00000000  0000091c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000699  00000000  00000000  0000131a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002ea  00000000  00000000  000019b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000f8  00000000  00000000  00001ca0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003a2  00000000  00000000  00001d98  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000038d  00000000  00000000  0000213a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  000024c7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	14 c0       	rjmp	.+40     	; 0x2a <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>
  26:	1a c0       	rjmp	.+52     	; 0x5c <__bad_interrupt>
  28:	19 c0       	rjmp	.+50     	; 0x5c <__bad_interrupt>

0000002a <__ctors_end>:
  2a:	11 24       	eor	r1, r1
  2c:	1f be       	out	0x3f, r1	; 63
  2e:	cf ed       	ldi	r28, 0xDF	; 223
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	e6 e8       	ldi	r30, 0x86	; 134
  3a:	f7 e0       	ldi	r31, 0x07	; 7
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	ac 39       	cpi	r26, 0x9C	; 156
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_L__+0x1>

00000048 <__do_clear_bss>:
  48:	20 e0       	ldi	r18, 0x00	; 0
  4a:	ac e9       	ldi	r26, 0x9C	; 156
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a2 3a       	cpi	r26, 0xA2	; 162
  54:	b2 07       	cpc	r27, r18
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	8d d0       	rcall	.+282    	; 0x174 <main>
  5a:	93 c3       	rjmp	.+1830   	; 0x782 <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <uart_putchar>:

static FILE mystdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);

static int uart_putchar(char c, FILE *stream)
{
	loop_until_bit_is_set(UCSRA, UDRE);
  5e:	5d 9b       	sbis	0x0b, 5	; 11
  60:	fe cf       	rjmp	.-4      	; 0x5e <uart_putchar>
	UDR = c;
  62:	8c b9       	out	0x0c, r24	; 12
	return 0;
}
  64:	80 e0       	ldi	r24, 0x00	; 0
  66:	90 e0       	ldi	r25, 0x00	; 0
  68:	08 95       	ret

0000006a <startserial>:

void startserial(void)
{
    UBRRH = UBRRH_VALUE;
  6a:	12 b8       	out	0x02, r1	; 2
    UBRRL = UBRRL_VALUE;
  6c:	8c e0       	ldi	r24, 0x0C	; 12
  6e:	89 b9       	out	0x09, r24	; 9

#if USE_2X
    UCSRA |= _BV(U2X);
  70:	59 9a       	sbi	0x0b, 1	; 11
#else
    UCSRA &= ~(_BV(U2X));
#endif

    UCSRC = _BV(UCSZ1) | _BV(UCSZ0); /* 8-bit data */
  72:	86 e0       	ldi	r24, 0x06	; 6
  74:	83 b9       	out	0x03, r24	; 3
    UCSRB = _BV(RXEN) | _BV(TXEN);   /* Enable RX and TX */
  76:	88 e1       	ldi	r24, 0x18	; 24
  78:	8a b9       	out	0x0a, r24	; 10

	stdout = &mystdout;
  7a:	80 e6       	ldi	r24, 0x60	; 96
  7c:	90 e0       	ldi	r25, 0x00	; 0
  7e:	90 93 9f 00 	sts	0x009F, r25	; 0x80009f <__data_end+0x3>
  82:	80 93 9e 00 	sts	0x009E, r24	; 0x80009e <__data_end+0x2>

	printf("Hello eclipse World!\n\r");
  86:	83 e7       	ldi	r24, 0x73	; 115
  88:	90 e0       	ldi	r25, 0x00	; 0
  8a:	9f 93       	push	r25
  8c:	8f 93       	push	r24
  8e:	bf d0       	rcall	.+382    	; 0x20e <printf>
  90:	0f 90       	pop	r0
  92:	0f 90       	pop	r0
  94:	08 95       	ret

00000096 <starttimer>:
}

void starttimer(void)
{
	TCCR0A = 0x33;
  96:	83 e3       	ldi	r24, 0x33	; 51
  98:	80 bf       	out	0x30, r24	; 48
	TCCR0B = 0x09;
  9a:	89 e0       	ldi	r24, 0x09	; 9
  9c:	83 bf       	out	0x33, r24	; 51
	OCR0A = 0x06;
  9e:	86 e0       	ldi	r24, 0x06	; 6
  a0:	86 bf       	out	0x36, r24	; 54
	OCR0B = 0x03;
  a2:	83 e0       	ldi	r24, 0x03	; 3
  a4:	8c bf       	out	0x3c, r24	; 60
  a6:	08 95       	ret

000000a8 <SPI_Write>:
}

void SPI_Write(char c)
{
  a8:	cf 93       	push	r28
  aa:	df 93       	push	r29
  ac:	1f 92       	push	r1
  ae:	cd b7       	in	r28, 0x3d	; 61
  b0:	dd 27       	eor	r29, r29
  b2:	89 83       	std	Y+1, r24	; 0x01
  b4:	28 ef       	ldi	r18, 0xF8	; 248
  b6:	3f ef       	ldi	r19, 0xFF	; 255
	for (int i = 0;i < 8; ++i)
	{
		PORTB |= _BV(PORTB7);
  b8:	c7 9a       	sbi	0x18, 7	; 24
		if (bit_is_set(c,i-8))
  ba:	89 81       	ldd	r24, Y+1	; 0x01
  bc:	90 e0       	ldi	r25, 0x00	; 0
  be:	02 2e       	mov	r0, r18
  c0:	02 c0       	rjmp	.+4      	; 0xc6 <SPI_Write+0x1e>
  c2:	95 95       	asr	r25
  c4:	87 95       	ror	r24
  c6:	0a 94       	dec	r0
  c8:	e2 f7       	brpl	.-8      	; 0xc2 <SPI_Write+0x1a>
  ca:	80 ff       	sbrs	r24, 0
  cc:	02 c0       	rjmp	.+4      	; 0xd2 <SPI_Write+0x2a>
			PORTB |= _BV(PORTB5);//set
  ce:	c5 9a       	sbi	0x18, 5	; 24
  d0:	01 c0       	rjmp	.+2      	; 0xd4 <SPI_Write+0x2c>
		else
			PORTB &= ~(_BV(PORTB5));//clear
  d2:	c5 98       	cbi	0x18, 5	; 24
		PORTB &= ~(_BV(PORTB7));
  d4:	c7 98       	cbi	0x18, 7	; 24
  d6:	2f 5f       	subi	r18, 0xFF	; 255
  d8:	3f 4f       	sbci	r19, 0xFF	; 255
	OCR0B = 0x03;
}

void SPI_Write(char c)
{
	for (int i = 0;i < 8; ++i)
  da:	71 f7       	brne	.-36     	; 0xb8 <SPI_Write+0x10>
			PORTB |= _BV(PORTB5);//set
		else
			PORTB &= ~(_BV(PORTB5));//clear
		PORTB &= ~(_BV(PORTB7));
	}
}
  dc:	0f 90       	pop	r0
  de:	df 91       	pop	r29
  e0:	cf 91       	pop	r28
  e2:	08 95       	ret

000000e4 <SPI_Write_Bytes>:

void SPI_Write_Bytes(char *buffer, unsigned NoBytes)
{
  e4:	0f 93       	push	r16
  e6:	1f 93       	push	r17
  e8:	cf 93       	push	r28
  ea:	df 93       	push	r29
	PORTB &= ~(_BV(PORTB4));//clear
  ec:	c4 98       	cbi	0x18, 4	; 24
  ee:	ec 01       	movw	r28, r24
  f0:	8c 01       	movw	r16, r24
  f2:	06 0f       	add	r16, r22
  f4:	17 1f       	adc	r17, r23
	for (int i = 0; i < NoBytes; i++)
  f6:	c0 17       	cp	r28, r16
  f8:	d1 07       	cpc	r29, r17
  fa:	19 f0       	breq	.+6      	; 0x102 <SPI_Write_Bytes+0x1e>
		SPI_Write(buffer[i]);
  fc:	89 91       	ld	r24, Y+
  fe:	d4 df       	rcall	.-88     	; 0xa8 <SPI_Write>
 100:	fa cf       	rjmp	.-12     	; 0xf6 <SPI_Write_Bytes+0x12>
	PORTB |= _BV(PORTB4);//set
 102:	c4 9a       	sbi	0x18, 4	; 24
}
 104:	df 91       	pop	r29
 106:	cf 91       	pop	r28
 108:	1f 91       	pop	r17
 10a:	0f 91       	pop	r16
 10c:	08 95       	ret

0000010e <SPI_Read>:

char SPI_Read(void)
{
 10e:	28 e0       	ldi	r18, 0x08	; 8
 110:	30 e0       	ldi	r19, 0x00	; 0
	char value = 0;
 112:	80 e0       	ldi	r24, 0x00	; 0
	for (int i = 0;i < 24; ++i)
	{
		PORTB |= _BV(PORTB7);
		if (bit_is_set(PINB,PINB6))
			value |= _BV(8-i);
 114:	41 e0       	ldi	r20, 0x01	; 1
 116:	50 e0       	ldi	r21, 0x00	; 0
char SPI_Read(void)
{
	char value = 0;
	for (int i = 0;i < 24; ++i)
	{
		PORTB |= _BV(PORTB7);
 118:	c7 9a       	sbi	0x18, 7	; 24
		if (bit_is_set(PINB,PINB6))
 11a:	b6 9b       	sbis	0x16, 6	; 22
 11c:	07 c0       	rjmp	.+14     	; 0x12c <SPI_Read+0x1e>
			value |= _BV(8-i);
 11e:	ba 01       	movw	r22, r20
 120:	02 2e       	mov	r0, r18
 122:	01 c0       	rjmp	.+2      	; 0x126 <SPI_Read+0x18>
 124:	66 0f       	add	r22, r22
 126:	0a 94       	dec	r0
 128:	ea f7       	brpl	.-6      	; 0x124 <SPI_Read+0x16>
 12a:	86 2b       	or	r24, r22
		PORTB &= ~(_BV(PORTB7));
 12c:	c7 98       	cbi	0x18, 7	; 24
 12e:	21 50       	subi	r18, 0x01	; 1
 130:	31 09       	sbc	r19, r1
}

char SPI_Read(void)
{
	char value = 0;
	for (int i = 0;i < 24; ++i)
 132:	20 3f       	cpi	r18, 0xF0	; 240
 134:	9f ef       	ldi	r25, 0xFF	; 255
 136:	39 07       	cpc	r19, r25
 138:	79 f7       	brne	.-34     	; 0x118 <SPI_Read+0xa>
		if (bit_is_set(PINB,PINB6))
			value |= _BV(8-i);
		PORTB &= ~(_BV(PORTB7));
	}
	return value;
}
 13a:	08 95       	ret

0000013c <SPI_Read_Bytes>:

void SPI_Read_Bytes(char *buffer, unsigned NoBytes)
{
 13c:	0f 93       	push	r16
 13e:	1f 93       	push	r17
 140:	cf 93       	push	r28
 142:	df 93       	push	r29
	PORTB &= ~(_BV(PORTB4));//clear
 144:	c4 98       	cbi	0x18, 4	; 24
 146:	ec 01       	movw	r28, r24
 148:	8c 01       	movw	r16, r24
 14a:	06 0f       	add	r16, r22
 14c:	17 1f       	adc	r17, r23
	for (int i = 0; i < NoBytes; i++)
 14e:	c0 17       	cp	r28, r16
 150:	d1 07       	cpc	r29, r17
 152:	19 f0       	breq	.+6      	; 0x15a <SPI_Read_Bytes+0x1e>
		buffer[i] = SPI_Read();
 154:	dc df       	rcall	.-72     	; 0x10e <SPI_Read>
 156:	89 93       	st	Y+, r24
 158:	fa cf       	rjmp	.-12     	; 0x14e <SPI_Read_Bytes+0x12>
	PORTB |= _BV(PORTB4);//set
 15a:	c4 9a       	sbi	0x18, 4	; 24
}
 15c:	df 91       	pop	r29
 15e:	cf 91       	pop	r28
 160:	1f 91       	pop	r17
 162:	0f 91       	pop	r16
 164:	08 95       	ret

00000166 <ad7705_reset>:

void ad7705_reset()
{
 166:	88 e2       	ldi	r24, 0x28	; 40
 168:	90 e0       	ldi	r25, 0x00	; 0
	for (int i = 0;i < 40;++i)
	{
		PORTB |= _BV(PORTB7);
 16a:	c7 9a       	sbi	0x18, 7	; 24
		PORTB &= ~(_BV(PORTB7));
 16c:	c7 98       	cbi	0x18, 7	; 24
 16e:	01 97       	sbiw	r24, 0x01	; 1
	PORTB |= _BV(PORTB4);//set
}

void ad7705_reset()
{
	for (int i = 0;i < 40;++i)
 170:	e1 f7       	brne	.-8      	; 0x16a <ad7705_reset+0x4>
	{
		PORTB |= _BV(PORTB7);
		PORTB &= ~(_BV(PORTB7));
	}
}
 172:	08 95       	ret

00000174 <main>:

int main(void)
{
 174:	cf 93       	push	r28
 176:	df 93       	push	r29
 178:	00 d0       	rcall	.+0      	; 0x17a <main+0x6>
 17a:	cd b7       	in	r28, 0x3d	; 61
 17c:	dd 27       	eor	r29, r29
	uint16_t result;

	DDRB = _BV(PORTB5)|_BV(PORTB7);//mosi,sck
 17e:	80 ea       	ldi	r24, 0xA0	; 160
 180:	87 bb       	out	0x17, r24	; 23
	DDRD = _BV(PORTD1)|_BV(PORTD5);//tx,clk
 182:	82 e2       	ldi	r24, 0x22	; 34
 184:	81 bb       	out	0x11, r24	; 17
	startserial();
 186:	71 df       	rcall	.-286    	; 0x6a <startserial>
	starttimer();
 188:	86 df       	rcall	.-244    	; 0x96 <starttimer>

	ad7705_reset();
 18a:	ed df       	rcall	.-38     	; 0x166 <ad7705_reset>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 18c:	83 ec       	ldi	r24, 0xC3	; 195
 18e:	99 e0       	ldi	r25, 0x09	; 9
 190:	01 97       	sbiw	r24, 0x01	; 1
 192:	f1 f7       	brne	.-4      	; 0x190 <main+0x1c>
 194:	00 c0       	rjmp	.+0      	; 0x196 <main+0x22>
 196:	00 00       	nop
	_delay_ms(10);
	SPI_Write_Bytes("\x20\x0C\x10\x04", 4);
 198:	64 e0       	ldi	r22, 0x04	; 4
 19a:	70 e0       	ldi	r23, 0x00	; 0
 19c:	8a e8       	ldi	r24, 0x8A	; 138
 19e:	90 e0       	ldi	r25, 0x00	; 0
 1a0:	a1 df       	rcall	.-190    	; 0xe4 <SPI_Write_Bytes>
 1a2:	83 ec       	ldi	r24, 0xC3	; 195
 1a4:	99 e0       	ldi	r25, 0x09	; 9
 1a6:	01 97       	sbiw	r24, 0x01	; 1
 1a8:	f1 f7       	brne	.-4      	; 0x1a6 <main+0x32>
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <main+0x38>
 1ac:	00 00       	nop
	_delay_ms(10);
	SPI_Write_Bytes("\x60\x18\x3A\x00", 4);
 1ae:	64 e0       	ldi	r22, 0x04	; 4
 1b0:	70 e0       	ldi	r23, 0x00	; 0
 1b2:	8e e6       	ldi	r24, 0x6E	; 110
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	96 df       	rcall	.-212    	; 0xe4 <SPI_Write_Bytes>
 1b8:	83 ec       	ldi	r24, 0xC3	; 195
 1ba:	99 e0       	ldi	r25, 0x09	; 9
 1bc:	01 97       	sbiw	r24, 0x01	; 1
 1be:	f1 f7       	brne	.-4      	; 0x1bc <main+0x48>
 1c0:	00 c0       	rjmp	.+0      	; 0x1c2 <main+0x4e>
 1c2:	00 00       	nop
	_delay_ms(10);
	SPI_Write_Bytes("\x70\x89\x78\xD7", 4);
 1c4:	64 e0       	ldi	r22, 0x04	; 4
 1c6:	70 e0       	ldi	r23, 0x00	; 0
 1c8:	8f e8       	ldi	r24, 0x8F	; 143
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	8b df       	rcall	.-234    	; 0xe4 <SPI_Write_Bytes>
 1ce:	83 ec       	ldi	r24, 0xC3	; 195
 1d0:	99 e0       	ldi	r25, 0x09	; 9
 1d2:	01 97       	sbiw	r24, 0x01	; 1
 1d4:	f1 f7       	brne	.-4      	; 0x1d2 <main+0x5e>
 1d6:	00 c0       	rjmp	.+0      	; 0x1d8 <main+0x64>
 1d8:	00 00       	nop
    {
			if (bit_is_clear(PINB,PINB4))
			{
				SPI_Write(0x38);
				SPI_Read_Bytes((char *)&result,2);
				printf("%04X\r\n",__builtin_bswap16(result));
 1da:	04 e9       	ldi	r16, 0x94	; 148
 1dc:	10 e0       	ldi	r17, 0x00	; 0
	SPI_Write_Bytes("\x70\x89\x78\xD7", 4);
	_delay_ms(10);

    while(1)
    {
			if (bit_is_clear(PINB,PINB4))
 1de:	b4 99       	sbic	0x16, 4	; 22
 1e0:	fe cf       	rjmp	.-4      	; 0x1de <main+0x6a>
			{
				SPI_Write(0x38);
 1e2:	88 e3       	ldi	r24, 0x38	; 56
 1e4:	61 df       	rcall	.-318    	; 0xa8 <SPI_Write>
				SPI_Read_Bytes((char *)&result,2);
 1e6:	62 e0       	ldi	r22, 0x02	; 2
 1e8:	70 e0       	ldi	r23, 0x00	; 0
 1ea:	ce 01       	movw	r24, r28
 1ec:	01 96       	adiw	r24, 0x01	; 1
 1ee:	a6 df       	rcall	.-180    	; 0x13c <SPI_Read_Bytes>
				printf("%04X\r\n",__builtin_bswap16(result));
 1f0:	89 81       	ldd	r24, Y+1	; 0x01
 1f2:	9a 81       	ldd	r25, Y+2	; 0x02
 1f4:	98 27       	eor	r25, r24
 1f6:	89 27       	eor	r24, r25
 1f8:	98 27       	eor	r25, r24
 1fa:	9f 93       	push	r25
 1fc:	8f 93       	push	r24
 1fe:	1f 93       	push	r17
 200:	0f 93       	push	r16
 202:	05 d0       	rcall	.+10     	; 0x20e <printf>
 204:	0f 90       	pop	r0
 206:	0f 90       	pop	r0
 208:	0f 90       	pop	r0
 20a:	0f 90       	pop	r0
 20c:	e8 cf       	rjmp	.-48     	; 0x1de <main+0x6a>

0000020e <printf>:
 20e:	a0 e0       	ldi	r26, 0x00	; 0
 210:	b0 e0       	ldi	r27, 0x00	; 0
 212:	ec e0       	ldi	r30, 0x0C	; 12
 214:	f1 e0       	ldi	r31, 0x01	; 1
 216:	98 c2       	rjmp	.+1328   	; 0x748 <__prologue_saves__+0x20>
 218:	ae 01       	movw	r20, r28
 21a:	4b 5f       	subi	r20, 0xFB	; 251
 21c:	5f 4f       	sbci	r21, 0xFF	; 255
 21e:	fa 01       	movw	r30, r20
 220:	61 91       	ld	r22, Z+
 222:	71 91       	ld	r23, Z+
 224:	af 01       	movw	r20, r30
 226:	80 91 9e 00 	lds	r24, 0x009E	; 0x80009e <__data_end+0x2>
 22a:	90 91 9f 00 	lds	r25, 0x009F	; 0x80009f <__data_end+0x3>
 22e:	02 d0       	rcall	.+4      	; 0x234 <vfprintf>
 230:	e2 e0       	ldi	r30, 0x02	; 2
 232:	a1 c2       	rjmp	.+1346   	; 0x776 <__epilogue_restores__+0x20>

00000234 <vfprintf>:
 234:	ac e0       	ldi	r26, 0x0C	; 12
 236:	b0 e0       	ldi	r27, 0x00	; 0
 238:	ef e1       	ldi	r30, 0x1F	; 31
 23a:	f1 e0       	ldi	r31, 0x01	; 1
 23c:	75 c2       	rjmp	.+1258   	; 0x728 <__prologue_saves__>
 23e:	7c 01       	movw	r14, r24
 240:	6b 01       	movw	r12, r22
 242:	8a 01       	movw	r16, r20
 244:	fc 01       	movw	r30, r24
 246:	17 82       	std	Z+7, r1	; 0x07
 248:	16 82       	std	Z+6, r1	; 0x06
 24a:	83 81       	ldd	r24, Z+3	; 0x03
 24c:	81 ff       	sbrs	r24, 1
 24e:	b0 c1       	rjmp	.+864    	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 250:	ce 01       	movw	r24, r28
 252:	01 96       	adiw	r24, 0x01	; 1
 254:	4c 01       	movw	r8, r24
 256:	f7 01       	movw	r30, r14
 258:	93 81       	ldd	r25, Z+3	; 0x03
 25a:	f6 01       	movw	r30, r12
 25c:	93 fd       	sbrc	r25, 3
 25e:	85 91       	lpm	r24, Z+
 260:	93 ff       	sbrs	r25, 3
 262:	81 91       	ld	r24, Z+
 264:	6f 01       	movw	r12, r30
 266:	88 23       	and	r24, r24
 268:	09 f4       	brne	.+2      	; 0x26c <vfprintf+0x38>
 26a:	9e c1       	rjmp	.+828    	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
 26c:	85 32       	cpi	r24, 0x25	; 37
 26e:	39 f4       	brne	.+14     	; 0x27e <vfprintf+0x4a>
 270:	93 fd       	sbrc	r25, 3
 272:	85 91       	lpm	r24, Z+
 274:	93 ff       	sbrs	r25, 3
 276:	81 91       	ld	r24, Z+
 278:	6f 01       	movw	r12, r30
 27a:	85 32       	cpi	r24, 0x25	; 37
 27c:	21 f4       	brne	.+8      	; 0x286 <vfprintf+0x52>
 27e:	b7 01       	movw	r22, r14
 280:	90 e0       	ldi	r25, 0x00	; 0
 282:	b1 d1       	rcall	.+866    	; 0x5e6 <fputc>
 284:	e8 cf       	rjmp	.-48     	; 0x256 <vfprintf+0x22>
 286:	51 2c       	mov	r5, r1
 288:	31 2c       	mov	r3, r1
 28a:	20 e0       	ldi	r18, 0x00	; 0
 28c:	20 32       	cpi	r18, 0x20	; 32
 28e:	a0 f4       	brcc	.+40     	; 0x2b8 <vfprintf+0x84>
 290:	8b 32       	cpi	r24, 0x2B	; 43
 292:	69 f0       	breq	.+26     	; 0x2ae <vfprintf+0x7a>
 294:	30 f4       	brcc	.+12     	; 0x2a2 <vfprintf+0x6e>
 296:	80 32       	cpi	r24, 0x20	; 32
 298:	59 f0       	breq	.+22     	; 0x2b0 <vfprintf+0x7c>
 29a:	83 32       	cpi	r24, 0x23	; 35
 29c:	69 f4       	brne	.+26     	; 0x2b8 <vfprintf+0x84>
 29e:	20 61       	ori	r18, 0x10	; 16
 2a0:	2c c0       	rjmp	.+88     	; 0x2fa <vfprintf+0xc6>
 2a2:	8d 32       	cpi	r24, 0x2D	; 45
 2a4:	39 f0       	breq	.+14     	; 0x2b4 <vfprintf+0x80>
 2a6:	80 33       	cpi	r24, 0x30	; 48
 2a8:	39 f4       	brne	.+14     	; 0x2b8 <vfprintf+0x84>
 2aa:	21 60       	ori	r18, 0x01	; 1
 2ac:	26 c0       	rjmp	.+76     	; 0x2fa <vfprintf+0xc6>
 2ae:	22 60       	ori	r18, 0x02	; 2
 2b0:	24 60       	ori	r18, 0x04	; 4
 2b2:	23 c0       	rjmp	.+70     	; 0x2fa <vfprintf+0xc6>
 2b4:	28 60       	ori	r18, 0x08	; 8
 2b6:	21 c0       	rjmp	.+66     	; 0x2fa <vfprintf+0xc6>
 2b8:	27 fd       	sbrc	r18, 7
 2ba:	27 c0       	rjmp	.+78     	; 0x30a <vfprintf+0xd6>
 2bc:	30 ed       	ldi	r19, 0xD0	; 208
 2be:	38 0f       	add	r19, r24
 2c0:	3a 30       	cpi	r19, 0x0A	; 10
 2c2:	78 f4       	brcc	.+30     	; 0x2e2 <vfprintf+0xae>
 2c4:	26 ff       	sbrs	r18, 6
 2c6:	06 c0       	rjmp	.+12     	; 0x2d4 <vfprintf+0xa0>
 2c8:	85 2d       	mov	r24, r5
 2ca:	6a e0       	ldi	r22, 0x0A	; 10
 2cc:	24 d2       	rcall	.+1096   	; 0x716 <__mulqi3>
 2ce:	58 2e       	mov	r5, r24
 2d0:	53 0e       	add	r5, r19
 2d2:	13 c0       	rjmp	.+38     	; 0x2fa <vfprintf+0xc6>
 2d4:	83 2d       	mov	r24, r3
 2d6:	6a e0       	ldi	r22, 0x0A	; 10
 2d8:	1e d2       	rcall	.+1084   	; 0x716 <__mulqi3>
 2da:	38 2e       	mov	r3, r24
 2dc:	33 0e       	add	r3, r19
 2de:	20 62       	ori	r18, 0x20	; 32
 2e0:	0c c0       	rjmp	.+24     	; 0x2fa <vfprintf+0xc6>
 2e2:	8e 32       	cpi	r24, 0x2E	; 46
 2e4:	21 f4       	brne	.+8      	; 0x2ee <vfprintf+0xba>
 2e6:	26 fd       	sbrc	r18, 6
 2e8:	5f c1       	rjmp	.+702    	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
 2ea:	20 64       	ori	r18, 0x40	; 64
 2ec:	06 c0       	rjmp	.+12     	; 0x2fa <vfprintf+0xc6>
 2ee:	8c 36       	cpi	r24, 0x6C	; 108
 2f0:	11 f4       	brne	.+4      	; 0x2f6 <vfprintf+0xc2>
 2f2:	20 68       	ori	r18, 0x80	; 128
 2f4:	02 c0       	rjmp	.+4      	; 0x2fa <vfprintf+0xc6>
 2f6:	88 36       	cpi	r24, 0x68	; 104
 2f8:	41 f4       	brne	.+16     	; 0x30a <vfprintf+0xd6>
 2fa:	f6 01       	movw	r30, r12
 2fc:	93 fd       	sbrc	r25, 3
 2fe:	85 91       	lpm	r24, Z+
 300:	93 ff       	sbrs	r25, 3
 302:	81 91       	ld	r24, Z+
 304:	6f 01       	movw	r12, r30
 306:	81 11       	cpse	r24, r1
 308:	c1 cf       	rjmp	.-126    	; 0x28c <vfprintf+0x58>
 30a:	98 2f       	mov	r25, r24
 30c:	9f 7d       	andi	r25, 0xDF	; 223
 30e:	95 54       	subi	r25, 0x45	; 69
 310:	93 30       	cpi	r25, 0x03	; 3
 312:	28 f4       	brcc	.+10     	; 0x31e <vfprintf+0xea>
 314:	0c 5f       	subi	r16, 0xFC	; 252
 316:	1f 4f       	sbci	r17, 0xFF	; 255
 318:	ff e3       	ldi	r31, 0x3F	; 63
 31a:	f9 83       	std	Y+1, r31	; 0x01
 31c:	0d c0       	rjmp	.+26     	; 0x338 <vfprintf+0x104>
 31e:	83 36       	cpi	r24, 0x63	; 99
 320:	31 f0       	breq	.+12     	; 0x32e <vfprintf+0xfa>
 322:	83 37       	cpi	r24, 0x73	; 115
 324:	71 f0       	breq	.+28     	; 0x342 <vfprintf+0x10e>
 326:	83 35       	cpi	r24, 0x53	; 83
 328:	09 f0       	breq	.+2      	; 0x32c <vfprintf+0xf8>
 32a:	57 c0       	rjmp	.+174    	; 0x3da <vfprintf+0x1a6>
 32c:	21 c0       	rjmp	.+66     	; 0x370 <vfprintf+0x13c>
 32e:	f8 01       	movw	r30, r16
 330:	80 81       	ld	r24, Z
 332:	89 83       	std	Y+1, r24	; 0x01
 334:	0e 5f       	subi	r16, 0xFE	; 254
 336:	1f 4f       	sbci	r17, 0xFF	; 255
 338:	44 24       	eor	r4, r4
 33a:	43 94       	inc	r4
 33c:	51 2c       	mov	r5, r1
 33e:	54 01       	movw	r10, r8
 340:	14 c0       	rjmp	.+40     	; 0x36a <vfprintf+0x136>
 342:	38 01       	movw	r6, r16
 344:	f2 e0       	ldi	r31, 0x02	; 2
 346:	6f 0e       	add	r6, r31
 348:	71 1c       	adc	r7, r1
 34a:	f8 01       	movw	r30, r16
 34c:	a0 80       	ld	r10, Z
 34e:	b1 80       	ldd	r11, Z+1	; 0x01
 350:	26 ff       	sbrs	r18, 6
 352:	03 c0       	rjmp	.+6      	; 0x35a <vfprintf+0x126>
 354:	65 2d       	mov	r22, r5
 356:	70 e0       	ldi	r23, 0x00	; 0
 358:	02 c0       	rjmp	.+4      	; 0x35e <vfprintf+0x12a>
 35a:	6f ef       	ldi	r22, 0xFF	; 255
 35c:	7f ef       	ldi	r23, 0xFF	; 255
 35e:	c5 01       	movw	r24, r10
 360:	2c 87       	std	Y+12, r18	; 0x0c
 362:	36 d1       	rcall	.+620    	; 0x5d0 <strnlen>
 364:	2c 01       	movw	r4, r24
 366:	83 01       	movw	r16, r6
 368:	2c 85       	ldd	r18, Y+12	; 0x0c
 36a:	2f 77       	andi	r18, 0x7F	; 127
 36c:	22 2e       	mov	r2, r18
 36e:	16 c0       	rjmp	.+44     	; 0x39c <vfprintf+0x168>
 370:	38 01       	movw	r6, r16
 372:	f2 e0       	ldi	r31, 0x02	; 2
 374:	6f 0e       	add	r6, r31
 376:	71 1c       	adc	r7, r1
 378:	f8 01       	movw	r30, r16
 37a:	a0 80       	ld	r10, Z
 37c:	b1 80       	ldd	r11, Z+1	; 0x01
 37e:	26 ff       	sbrs	r18, 6
 380:	03 c0       	rjmp	.+6      	; 0x388 <vfprintf+0x154>
 382:	65 2d       	mov	r22, r5
 384:	70 e0       	ldi	r23, 0x00	; 0
 386:	02 c0       	rjmp	.+4      	; 0x38c <vfprintf+0x158>
 388:	6f ef       	ldi	r22, 0xFF	; 255
 38a:	7f ef       	ldi	r23, 0xFF	; 255
 38c:	c5 01       	movw	r24, r10
 38e:	2c 87       	std	Y+12, r18	; 0x0c
 390:	14 d1       	rcall	.+552    	; 0x5ba <strnlen_P>
 392:	2c 01       	movw	r4, r24
 394:	2c 85       	ldd	r18, Y+12	; 0x0c
 396:	20 68       	ori	r18, 0x80	; 128
 398:	22 2e       	mov	r2, r18
 39a:	83 01       	movw	r16, r6
 39c:	23 fc       	sbrc	r2, 3
 39e:	19 c0       	rjmp	.+50     	; 0x3d2 <vfprintf+0x19e>
 3a0:	83 2d       	mov	r24, r3
 3a2:	90 e0       	ldi	r25, 0x00	; 0
 3a4:	48 16       	cp	r4, r24
 3a6:	59 06       	cpc	r5, r25
 3a8:	a0 f4       	brcc	.+40     	; 0x3d2 <vfprintf+0x19e>
 3aa:	b7 01       	movw	r22, r14
 3ac:	80 e2       	ldi	r24, 0x20	; 32
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	1a d1       	rcall	.+564    	; 0x5e6 <fputc>
 3b2:	3a 94       	dec	r3
 3b4:	f5 cf       	rjmp	.-22     	; 0x3a0 <vfprintf+0x16c>
 3b6:	f5 01       	movw	r30, r10
 3b8:	27 fc       	sbrc	r2, 7
 3ba:	85 91       	lpm	r24, Z+
 3bc:	27 fe       	sbrs	r2, 7
 3be:	81 91       	ld	r24, Z+
 3c0:	5f 01       	movw	r10, r30
 3c2:	b7 01       	movw	r22, r14
 3c4:	90 e0       	ldi	r25, 0x00	; 0
 3c6:	0f d1       	rcall	.+542    	; 0x5e6 <fputc>
 3c8:	31 10       	cpse	r3, r1
 3ca:	3a 94       	dec	r3
 3cc:	f1 e0       	ldi	r31, 0x01	; 1
 3ce:	4f 1a       	sub	r4, r31
 3d0:	51 08       	sbc	r5, r1
 3d2:	41 14       	cp	r4, r1
 3d4:	51 04       	cpc	r5, r1
 3d6:	79 f7       	brne	.-34     	; 0x3b6 <vfprintf+0x182>
 3d8:	de c0       	rjmp	.+444    	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 3da:	84 36       	cpi	r24, 0x64	; 100
 3dc:	11 f0       	breq	.+4      	; 0x3e2 <vfprintf+0x1ae>
 3de:	89 36       	cpi	r24, 0x69	; 105
 3e0:	31 f5       	brne	.+76     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 3e2:	f8 01       	movw	r30, r16
 3e4:	27 ff       	sbrs	r18, 7
 3e6:	07 c0       	rjmp	.+14     	; 0x3f6 <vfprintf+0x1c2>
 3e8:	60 81       	ld	r22, Z
 3ea:	71 81       	ldd	r23, Z+1	; 0x01
 3ec:	82 81       	ldd	r24, Z+2	; 0x02
 3ee:	93 81       	ldd	r25, Z+3	; 0x03
 3f0:	0c 5f       	subi	r16, 0xFC	; 252
 3f2:	1f 4f       	sbci	r17, 0xFF	; 255
 3f4:	08 c0       	rjmp	.+16     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3f6:	60 81       	ld	r22, Z
 3f8:	71 81       	ldd	r23, Z+1	; 0x01
 3fa:	07 2e       	mov	r0, r23
 3fc:	00 0c       	add	r0, r0
 3fe:	88 0b       	sbc	r24, r24
 400:	99 0b       	sbc	r25, r25
 402:	0e 5f       	subi	r16, 0xFE	; 254
 404:	1f 4f       	sbci	r17, 0xFF	; 255
 406:	2f 76       	andi	r18, 0x6F	; 111
 408:	72 2e       	mov	r7, r18
 40a:	97 ff       	sbrs	r25, 7
 40c:	09 c0       	rjmp	.+18     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 40e:	90 95       	com	r25
 410:	80 95       	com	r24
 412:	70 95       	com	r23
 414:	61 95       	neg	r22
 416:	7f 4f       	sbci	r23, 0xFF	; 255
 418:	8f 4f       	sbci	r24, 0xFF	; 255
 41a:	9f 4f       	sbci	r25, 0xFF	; 255
 41c:	20 68       	ori	r18, 0x80	; 128
 41e:	72 2e       	mov	r7, r18
 420:	2a e0       	ldi	r18, 0x0A	; 10
 422:	30 e0       	ldi	r19, 0x00	; 0
 424:	a4 01       	movw	r20, r8
 426:	17 d1       	rcall	.+558    	; 0x656 <__ultoa_invert>
 428:	a8 2e       	mov	r10, r24
 42a:	a8 18       	sub	r10, r8
 42c:	43 c0       	rjmp	.+134    	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 42e:	85 37       	cpi	r24, 0x75	; 117
 430:	29 f4       	brne	.+10     	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 432:	2f 7e       	andi	r18, 0xEF	; 239
 434:	b2 2e       	mov	r11, r18
 436:	2a e0       	ldi	r18, 0x0A	; 10
 438:	30 e0       	ldi	r19, 0x00	; 0
 43a:	25 c0       	rjmp	.+74     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 43c:	f2 2f       	mov	r31, r18
 43e:	f9 7f       	andi	r31, 0xF9	; 249
 440:	bf 2e       	mov	r11, r31
 442:	8f 36       	cpi	r24, 0x6F	; 111
 444:	c1 f0       	breq	.+48     	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 446:	18 f4       	brcc	.+6      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 448:	88 35       	cpi	r24, 0x58	; 88
 44a:	79 f0       	breq	.+30     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 44c:	ad c0       	rjmp	.+346    	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
 44e:	80 37       	cpi	r24, 0x70	; 112
 450:	19 f0       	breq	.+6      	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 452:	88 37       	cpi	r24, 0x78	; 120
 454:	21 f0       	breq	.+8      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 456:	a8 c0       	rjmp	.+336    	; 0x5a8 <__LOCK_REGION_LENGTH__+0x1a8>
 458:	2f 2f       	mov	r18, r31
 45a:	20 61       	ori	r18, 0x10	; 16
 45c:	b2 2e       	mov	r11, r18
 45e:	b4 fe       	sbrs	r11, 4
 460:	0d c0       	rjmp	.+26     	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 462:	8b 2d       	mov	r24, r11
 464:	84 60       	ori	r24, 0x04	; 4
 466:	b8 2e       	mov	r11, r24
 468:	09 c0       	rjmp	.+18     	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 46a:	24 ff       	sbrs	r18, 4
 46c:	0a c0       	rjmp	.+20     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 46e:	9f 2f       	mov	r25, r31
 470:	96 60       	ori	r25, 0x06	; 6
 472:	b9 2e       	mov	r11, r25
 474:	06 c0       	rjmp	.+12     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 476:	28 e0       	ldi	r18, 0x08	; 8
 478:	30 e0       	ldi	r19, 0x00	; 0
 47a:	05 c0       	rjmp	.+10     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 47c:	20 e1       	ldi	r18, 0x10	; 16
 47e:	30 e0       	ldi	r19, 0x00	; 0
 480:	02 c0       	rjmp	.+4      	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 482:	20 e1       	ldi	r18, 0x10	; 16
 484:	32 e0       	ldi	r19, 0x02	; 2
 486:	f8 01       	movw	r30, r16
 488:	b7 fe       	sbrs	r11, 7
 48a:	07 c0       	rjmp	.+14     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 48c:	60 81       	ld	r22, Z
 48e:	71 81       	ldd	r23, Z+1	; 0x01
 490:	82 81       	ldd	r24, Z+2	; 0x02
 492:	93 81       	ldd	r25, Z+3	; 0x03
 494:	0c 5f       	subi	r16, 0xFC	; 252
 496:	1f 4f       	sbci	r17, 0xFF	; 255
 498:	06 c0       	rjmp	.+12     	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
 49a:	60 81       	ld	r22, Z
 49c:	71 81       	ldd	r23, Z+1	; 0x01
 49e:	80 e0       	ldi	r24, 0x00	; 0
 4a0:	90 e0       	ldi	r25, 0x00	; 0
 4a2:	0e 5f       	subi	r16, 0xFE	; 254
 4a4:	1f 4f       	sbci	r17, 0xFF	; 255
 4a6:	a4 01       	movw	r20, r8
 4a8:	d6 d0       	rcall	.+428    	; 0x656 <__ultoa_invert>
 4aa:	a8 2e       	mov	r10, r24
 4ac:	a8 18       	sub	r10, r8
 4ae:	fb 2d       	mov	r31, r11
 4b0:	ff 77       	andi	r31, 0x7F	; 127
 4b2:	7f 2e       	mov	r7, r31
 4b4:	76 fe       	sbrs	r7, 6
 4b6:	0b c0       	rjmp	.+22     	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 4b8:	37 2d       	mov	r19, r7
 4ba:	3e 7f       	andi	r19, 0xFE	; 254
 4bc:	a5 14       	cp	r10, r5
 4be:	50 f4       	brcc	.+20     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 4c0:	74 fe       	sbrs	r7, 4
 4c2:	0a c0       	rjmp	.+20     	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 4c4:	72 fc       	sbrc	r7, 2
 4c6:	08 c0       	rjmp	.+16     	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 4c8:	37 2d       	mov	r19, r7
 4ca:	3e 7e       	andi	r19, 0xEE	; 238
 4cc:	05 c0       	rjmp	.+10     	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 4ce:	ba 2c       	mov	r11, r10
 4d0:	37 2d       	mov	r19, r7
 4d2:	03 c0       	rjmp	.+6      	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 4d4:	ba 2c       	mov	r11, r10
 4d6:	01 c0       	rjmp	.+2      	; 0x4da <__LOCK_REGION_LENGTH__+0xda>
 4d8:	b5 2c       	mov	r11, r5
 4da:	34 ff       	sbrs	r19, 4
 4dc:	0d c0       	rjmp	.+26     	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 4de:	fe 01       	movw	r30, r28
 4e0:	ea 0d       	add	r30, r10
 4e2:	f1 1d       	adc	r31, r1
 4e4:	80 81       	ld	r24, Z
 4e6:	80 33       	cpi	r24, 0x30	; 48
 4e8:	11 f4       	brne	.+4      	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4ea:	39 7e       	andi	r19, 0xE9	; 233
 4ec:	09 c0       	rjmp	.+18     	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 4ee:	32 ff       	sbrs	r19, 2
 4f0:	06 c0       	rjmp	.+12     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4f2:	b3 94       	inc	r11
 4f4:	b3 94       	inc	r11
 4f6:	04 c0       	rjmp	.+8      	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 4f8:	83 2f       	mov	r24, r19
 4fa:	86 78       	andi	r24, 0x86	; 134
 4fc:	09 f0       	breq	.+2      	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 4fe:	b3 94       	inc	r11
 500:	33 fd       	sbrc	r19, 3
 502:	12 c0       	rjmp	.+36     	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 504:	30 ff       	sbrs	r19, 0
 506:	06 c0       	rjmp	.+12     	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
 508:	5a 2c       	mov	r5, r10
 50a:	b3 14       	cp	r11, r3
 50c:	18 f4       	brcc	.+6      	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
 50e:	53 0c       	add	r5, r3
 510:	5b 18       	sub	r5, r11
 512:	b3 2c       	mov	r11, r3
 514:	b3 14       	cp	r11, r3
 516:	60 f4       	brcc	.+24     	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 518:	b7 01       	movw	r22, r14
 51a:	80 e2       	ldi	r24, 0x20	; 32
 51c:	90 e0       	ldi	r25, 0x00	; 0
 51e:	3c 87       	std	Y+12, r19	; 0x0c
 520:	62 d0       	rcall	.+196    	; 0x5e6 <fputc>
 522:	b3 94       	inc	r11
 524:	3c 85       	ldd	r19, Y+12	; 0x0c
 526:	f6 cf       	rjmp	.-20     	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
 528:	b3 14       	cp	r11, r3
 52a:	10 f4       	brcc	.+4      	; 0x530 <__LOCK_REGION_LENGTH__+0x130>
 52c:	3b 18       	sub	r3, r11
 52e:	01 c0       	rjmp	.+2      	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 530:	31 2c       	mov	r3, r1
 532:	34 ff       	sbrs	r19, 4
 534:	11 c0       	rjmp	.+34     	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 536:	b7 01       	movw	r22, r14
 538:	80 e3       	ldi	r24, 0x30	; 48
 53a:	90 e0       	ldi	r25, 0x00	; 0
 53c:	3c 87       	std	Y+12, r19	; 0x0c
 53e:	53 d0       	rcall	.+166    	; 0x5e6 <fputc>
 540:	3c 85       	ldd	r19, Y+12	; 0x0c
 542:	32 ff       	sbrs	r19, 2
 544:	16 c0       	rjmp	.+44     	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 546:	31 fd       	sbrc	r19, 1
 548:	03 c0       	rjmp	.+6      	; 0x550 <__LOCK_REGION_LENGTH__+0x150>
 54a:	88 e7       	ldi	r24, 0x78	; 120
 54c:	90 e0       	ldi	r25, 0x00	; 0
 54e:	02 c0       	rjmp	.+4      	; 0x554 <__LOCK_REGION_LENGTH__+0x154>
 550:	88 e5       	ldi	r24, 0x58	; 88
 552:	90 e0       	ldi	r25, 0x00	; 0
 554:	b7 01       	movw	r22, r14
 556:	0c c0       	rjmp	.+24     	; 0x570 <__LOCK_REGION_LENGTH__+0x170>
 558:	83 2f       	mov	r24, r19
 55a:	86 78       	andi	r24, 0x86	; 134
 55c:	51 f0       	breq	.+20     	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 55e:	31 ff       	sbrs	r19, 1
 560:	02 c0       	rjmp	.+4      	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 562:	8b e2       	ldi	r24, 0x2B	; 43
 564:	01 c0       	rjmp	.+2      	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
 566:	80 e2       	ldi	r24, 0x20	; 32
 568:	37 fd       	sbrc	r19, 7
 56a:	8d e2       	ldi	r24, 0x2D	; 45
 56c:	b7 01       	movw	r22, r14
 56e:	90 e0       	ldi	r25, 0x00	; 0
 570:	3a d0       	rcall	.+116    	; 0x5e6 <fputc>
 572:	a5 14       	cp	r10, r5
 574:	30 f4       	brcc	.+12     	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 576:	b7 01       	movw	r22, r14
 578:	80 e3       	ldi	r24, 0x30	; 48
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	34 d0       	rcall	.+104    	; 0x5e6 <fputc>
 57e:	5a 94       	dec	r5
 580:	f8 cf       	rjmp	.-16     	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 582:	aa 94       	dec	r10
 584:	f4 01       	movw	r30, r8
 586:	ea 0d       	add	r30, r10
 588:	f1 1d       	adc	r31, r1
 58a:	80 81       	ld	r24, Z
 58c:	b7 01       	movw	r22, r14
 58e:	90 e0       	ldi	r25, 0x00	; 0
 590:	2a d0       	rcall	.+84     	; 0x5e6 <fputc>
 592:	a1 10       	cpse	r10, r1
 594:	f6 cf       	rjmp	.-20     	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 596:	33 20       	and	r3, r3
 598:	09 f4       	brne	.+2      	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 59a:	5d ce       	rjmp	.-838    	; 0x256 <vfprintf+0x22>
 59c:	b7 01       	movw	r22, r14
 59e:	80 e2       	ldi	r24, 0x20	; 32
 5a0:	90 e0       	ldi	r25, 0x00	; 0
 5a2:	21 d0       	rcall	.+66     	; 0x5e6 <fputc>
 5a4:	3a 94       	dec	r3
 5a6:	f7 cf       	rjmp	.-18     	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 5a8:	f7 01       	movw	r30, r14
 5aa:	86 81       	ldd	r24, Z+6	; 0x06
 5ac:	97 81       	ldd	r25, Z+7	; 0x07
 5ae:	02 c0       	rjmp	.+4      	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 5b0:	8f ef       	ldi	r24, 0xFF	; 255
 5b2:	9f ef       	ldi	r25, 0xFF	; 255
 5b4:	2c 96       	adiw	r28, 0x0c	; 12
 5b6:	e2 e1       	ldi	r30, 0x12	; 18
 5b8:	ce c0       	rjmp	.+412    	; 0x756 <__epilogue_restores__>

000005ba <strnlen_P>:
 5ba:	fc 01       	movw	r30, r24
 5bc:	05 90       	lpm	r0, Z+
 5be:	61 50       	subi	r22, 0x01	; 1
 5c0:	70 40       	sbci	r23, 0x00	; 0
 5c2:	01 10       	cpse	r0, r1
 5c4:	d8 f7       	brcc	.-10     	; 0x5bc <strnlen_P+0x2>
 5c6:	80 95       	com	r24
 5c8:	90 95       	com	r25
 5ca:	8e 0f       	add	r24, r30
 5cc:	9f 1f       	adc	r25, r31
 5ce:	08 95       	ret

000005d0 <strnlen>:
 5d0:	fc 01       	movw	r30, r24
 5d2:	61 50       	subi	r22, 0x01	; 1
 5d4:	70 40       	sbci	r23, 0x00	; 0
 5d6:	01 90       	ld	r0, Z+
 5d8:	01 10       	cpse	r0, r1
 5da:	d8 f7       	brcc	.-10     	; 0x5d2 <strnlen+0x2>
 5dc:	80 95       	com	r24
 5de:	90 95       	com	r25
 5e0:	8e 0f       	add	r24, r30
 5e2:	9f 1f       	adc	r25, r31
 5e4:	08 95       	ret

000005e6 <fputc>:
 5e6:	0f 93       	push	r16
 5e8:	1f 93       	push	r17
 5ea:	cf 93       	push	r28
 5ec:	df 93       	push	r29
 5ee:	fb 01       	movw	r30, r22
 5f0:	23 81       	ldd	r18, Z+3	; 0x03
 5f2:	21 fd       	sbrc	r18, 1
 5f4:	03 c0       	rjmp	.+6      	; 0x5fc <fputc+0x16>
 5f6:	8f ef       	ldi	r24, 0xFF	; 255
 5f8:	9f ef       	ldi	r25, 0xFF	; 255
 5fa:	28 c0       	rjmp	.+80     	; 0x64c <fputc+0x66>
 5fc:	22 ff       	sbrs	r18, 2
 5fe:	16 c0       	rjmp	.+44     	; 0x62c <fputc+0x46>
 600:	46 81       	ldd	r20, Z+6	; 0x06
 602:	57 81       	ldd	r21, Z+7	; 0x07
 604:	24 81       	ldd	r18, Z+4	; 0x04
 606:	35 81       	ldd	r19, Z+5	; 0x05
 608:	42 17       	cp	r20, r18
 60a:	53 07       	cpc	r21, r19
 60c:	44 f4       	brge	.+16     	; 0x61e <fputc+0x38>
 60e:	a0 81       	ld	r26, Z
 610:	b1 81       	ldd	r27, Z+1	; 0x01
 612:	9d 01       	movw	r18, r26
 614:	2f 5f       	subi	r18, 0xFF	; 255
 616:	3f 4f       	sbci	r19, 0xFF	; 255
 618:	31 83       	std	Z+1, r19	; 0x01
 61a:	20 83       	st	Z, r18
 61c:	8c 93       	st	X, r24
 61e:	26 81       	ldd	r18, Z+6	; 0x06
 620:	37 81       	ldd	r19, Z+7	; 0x07
 622:	2f 5f       	subi	r18, 0xFF	; 255
 624:	3f 4f       	sbci	r19, 0xFF	; 255
 626:	37 83       	std	Z+7, r19	; 0x07
 628:	26 83       	std	Z+6, r18	; 0x06
 62a:	10 c0       	rjmp	.+32     	; 0x64c <fputc+0x66>
 62c:	eb 01       	movw	r28, r22
 62e:	09 2f       	mov	r16, r25
 630:	18 2f       	mov	r17, r24
 632:	00 84       	ldd	r0, Z+8	; 0x08
 634:	f1 85       	ldd	r31, Z+9	; 0x09
 636:	e0 2d       	mov	r30, r0
 638:	09 95       	icall
 63a:	89 2b       	or	r24, r25
 63c:	e1 f6       	brne	.-72     	; 0x5f6 <fputc+0x10>
 63e:	8e 81       	ldd	r24, Y+6	; 0x06
 640:	9f 81       	ldd	r25, Y+7	; 0x07
 642:	01 96       	adiw	r24, 0x01	; 1
 644:	9f 83       	std	Y+7, r25	; 0x07
 646:	8e 83       	std	Y+6, r24	; 0x06
 648:	81 2f       	mov	r24, r17
 64a:	90 2f       	mov	r25, r16
 64c:	df 91       	pop	r29
 64e:	cf 91       	pop	r28
 650:	1f 91       	pop	r17
 652:	0f 91       	pop	r16
 654:	08 95       	ret

00000656 <__ultoa_invert>:
 656:	fa 01       	movw	r30, r20
 658:	aa 27       	eor	r26, r26
 65a:	28 30       	cpi	r18, 0x08	; 8
 65c:	61 f1       	breq	.+88     	; 0x6b6 <__ultoa_invert+0x60>
 65e:	20 31       	cpi	r18, 0x10	; 16
 660:	91 f1       	breq	.+100    	; 0x6c6 <__ultoa_invert+0x70>
 662:	e8 94       	clt
 664:	6f 93       	push	r22
 666:	6e 7f       	andi	r22, 0xFE	; 254
 668:	6e 5f       	subi	r22, 0xFE	; 254
 66a:	7f 4f       	sbci	r23, 0xFF	; 255
 66c:	8f 4f       	sbci	r24, 0xFF	; 255
 66e:	9f 4f       	sbci	r25, 0xFF	; 255
 670:	af 4f       	sbci	r26, 0xFF	; 255
 672:	b1 e0       	ldi	r27, 0x01	; 1
 674:	40 d0       	rcall	.+128    	; 0x6f6 <__ultoa_invert+0xa0>
 676:	b4 e0       	ldi	r27, 0x04	; 4
 678:	3e d0       	rcall	.+124    	; 0x6f6 <__ultoa_invert+0xa0>
 67a:	67 0f       	add	r22, r23
 67c:	78 1f       	adc	r23, r24
 67e:	89 1f       	adc	r24, r25
 680:	9a 1f       	adc	r25, r26
 682:	a1 1d       	adc	r26, r1
 684:	68 0f       	add	r22, r24
 686:	79 1f       	adc	r23, r25
 688:	8a 1f       	adc	r24, r26
 68a:	91 1d       	adc	r25, r1
 68c:	a1 1d       	adc	r26, r1
 68e:	6a 0f       	add	r22, r26
 690:	71 1d       	adc	r23, r1
 692:	81 1d       	adc	r24, r1
 694:	91 1d       	adc	r25, r1
 696:	a1 1d       	adc	r26, r1
 698:	22 d0       	rcall	.+68     	; 0x6de <__ultoa_invert+0x88>
 69a:	09 f4       	brne	.+2      	; 0x69e <__ultoa_invert+0x48>
 69c:	68 94       	set
 69e:	3f 91       	pop	r19
 6a0:	06 2e       	mov	r0, r22
 6a2:	00 0c       	add	r0, r0
 6a4:	30 19       	sub	r19, r0
 6a6:	00 0c       	add	r0, r0
 6a8:	00 0c       	add	r0, r0
 6aa:	30 19       	sub	r19, r0
 6ac:	30 5d       	subi	r19, 0xD0	; 208
 6ae:	31 93       	st	Z+, r19
 6b0:	ce f6       	brtc	.-78     	; 0x664 <__ultoa_invert+0xe>
 6b2:	cf 01       	movw	r24, r30
 6b4:	08 95       	ret
 6b6:	46 2f       	mov	r20, r22
 6b8:	47 70       	andi	r20, 0x07	; 7
 6ba:	40 5d       	subi	r20, 0xD0	; 208
 6bc:	41 93       	st	Z+, r20
 6be:	b3 e0       	ldi	r27, 0x03	; 3
 6c0:	0f d0       	rcall	.+30     	; 0x6e0 <__ultoa_invert+0x8a>
 6c2:	c9 f7       	brne	.-14     	; 0x6b6 <__ultoa_invert+0x60>
 6c4:	f6 cf       	rjmp	.-20     	; 0x6b2 <__ultoa_invert+0x5c>
 6c6:	46 2f       	mov	r20, r22
 6c8:	4f 70       	andi	r20, 0x0F	; 15
 6ca:	40 5d       	subi	r20, 0xD0	; 208
 6cc:	4a 33       	cpi	r20, 0x3A	; 58
 6ce:	18 f0       	brcs	.+6      	; 0x6d6 <__ultoa_invert+0x80>
 6d0:	49 5d       	subi	r20, 0xD9	; 217
 6d2:	31 fd       	sbrc	r19, 1
 6d4:	40 52       	subi	r20, 0x20	; 32
 6d6:	41 93       	st	Z+, r20
 6d8:	02 d0       	rcall	.+4      	; 0x6de <__ultoa_invert+0x88>
 6da:	a9 f7       	brne	.-22     	; 0x6c6 <__ultoa_invert+0x70>
 6dc:	ea cf       	rjmp	.-44     	; 0x6b2 <__ultoa_invert+0x5c>
 6de:	b4 e0       	ldi	r27, 0x04	; 4
 6e0:	a6 95       	lsr	r26
 6e2:	97 95       	ror	r25
 6e4:	87 95       	ror	r24
 6e6:	77 95       	ror	r23
 6e8:	67 95       	ror	r22
 6ea:	ba 95       	dec	r27
 6ec:	c9 f7       	brne	.-14     	; 0x6e0 <__ultoa_invert+0x8a>
 6ee:	00 97       	sbiw	r24, 0x00	; 0
 6f0:	61 05       	cpc	r22, r1
 6f2:	71 05       	cpc	r23, r1
 6f4:	08 95       	ret
 6f6:	9b 01       	movw	r18, r22
 6f8:	ac 01       	movw	r20, r24
 6fa:	0a 2e       	mov	r0, r26
 6fc:	06 94       	lsr	r0
 6fe:	57 95       	ror	r21
 700:	47 95       	ror	r20
 702:	37 95       	ror	r19
 704:	27 95       	ror	r18
 706:	ba 95       	dec	r27
 708:	c9 f7       	brne	.-14     	; 0x6fc <__ultoa_invert+0xa6>
 70a:	62 0f       	add	r22, r18
 70c:	73 1f       	adc	r23, r19
 70e:	84 1f       	adc	r24, r20
 710:	95 1f       	adc	r25, r21
 712:	a0 1d       	adc	r26, r0
 714:	08 95       	ret

00000716 <__mulqi3>:
 716:	00 24       	eor	r0, r0

00000718 <__mulqi3_loop>:
 718:	80 fd       	sbrc	r24, 0
 71a:	06 0e       	add	r0, r22
 71c:	66 0f       	add	r22, r22
 71e:	11 f0       	breq	.+4      	; 0x724 <__mulqi3_exit>
 720:	86 95       	lsr	r24
 722:	d1 f7       	brne	.-12     	; 0x718 <__mulqi3_loop>

00000724 <__mulqi3_exit>:
 724:	80 2d       	mov	r24, r0
 726:	08 95       	ret

00000728 <__prologue_saves__>:
 728:	2f 92       	push	r2
 72a:	3f 92       	push	r3
 72c:	4f 92       	push	r4
 72e:	5f 92       	push	r5
 730:	6f 92       	push	r6
 732:	7f 92       	push	r7
 734:	8f 92       	push	r8
 736:	9f 92       	push	r9
 738:	af 92       	push	r10
 73a:	bf 92       	push	r11
 73c:	cf 92       	push	r12
 73e:	df 92       	push	r13
 740:	ef 92       	push	r14
 742:	ff 92       	push	r15
 744:	0f 93       	push	r16
 746:	1f 93       	push	r17
 748:	cf 93       	push	r28
 74a:	df 93       	push	r29
 74c:	cd b7       	in	r28, 0x3d	; 61
 74e:	ca 1b       	sub	r28, r26
 750:	cd bf       	out	0x3d, r28	; 61
 752:	dd 27       	eor	r29, r29
 754:	09 94       	ijmp

00000756 <__epilogue_restores__>:
 756:	2a 88       	ldd	r2, Y+18	; 0x12
 758:	39 88       	ldd	r3, Y+17	; 0x11
 75a:	48 88       	ldd	r4, Y+16	; 0x10
 75c:	5f 84       	ldd	r5, Y+15	; 0x0f
 75e:	6e 84       	ldd	r6, Y+14	; 0x0e
 760:	7d 84       	ldd	r7, Y+13	; 0x0d
 762:	8c 84       	ldd	r8, Y+12	; 0x0c
 764:	9b 84       	ldd	r9, Y+11	; 0x0b
 766:	aa 84       	ldd	r10, Y+10	; 0x0a
 768:	b9 84       	ldd	r11, Y+9	; 0x09
 76a:	c8 84       	ldd	r12, Y+8	; 0x08
 76c:	df 80       	ldd	r13, Y+7	; 0x07
 76e:	ee 80       	ldd	r14, Y+6	; 0x06
 770:	fd 80       	ldd	r15, Y+5	; 0x05
 772:	0c 81       	ldd	r16, Y+4	; 0x04
 774:	1b 81       	ldd	r17, Y+3	; 0x03
 776:	aa 81       	ldd	r26, Y+2	; 0x02
 778:	d9 81       	ldd	r29, Y+1	; 0x01
 77a:	ce 0f       	add	r28, r30
 77c:	cd bf       	out	0x3d, r28	; 61
 77e:	ca 2f       	mov	r28, r26
 780:	08 95       	ret

00000782 <_exit>:
 782:	f8 94       	cli

00000784 <__stop_program>:
 784:	ff cf       	rjmp	.-2      	; 0x784 <__stop_program>
